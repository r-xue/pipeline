#!/usr/bin/env python
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another
# directory, add these directories to sys.path here. If the directory is
# relative to the documentation root, use os.path.abspath to make it
# absolute, like shown here.
#
#

from datetime import datetime
import os
import sys

pipeline_dir = os.getenv('pipeline_dir')
if pipeline_dir is not None:
    # Use the env variable "pipeline_dir" to look for Pipeline if it's specified.
    sys.path.insert(0, os.path.abspath(pipeline_dir))
else:
    # Use the ancestry path if "pipeline_dir" is not set.
    sys.path.insert(0, os.path.abspath('../../'))

try:
    import pipeline
except ImportError as error:
    print("Can't import Pipeline, but we will continue to build the docs.")
    print(error.__class__.__name__ + ": " + error.message)
    pass

# -- General configuration ---------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = ['sphinx.ext.autodoc',
              'sphinx.ext.autosummary',
              'sphinx.ext.imgconverter',
              'sphinx.ext.mathjax',
              'sphinx.ext.napoleon',
              'sphinx.ext.intersphinx',
              'sphinxcontrib.bibtex',
              'sphinx_astrorefs',
              'recommonmark',
              'sphinx.ext.viewcode',
              'nbsphinx',
              'IPython.sphinxext.ipython_console_highlighting',
              'IPython.sphinxext.ipython_directive']

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#

#source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = 'Pipeline'
author = "Pipeline Dev. Team"
copyright = u'2020â€“{0}, '.format(datetime.utcnow().year) + author

# The version info for the project you're documenting, acts as replacement
# for |version| and |release|, also used in various other places throughout
# the built documents.
#
# The short X.Y version.
#version = pipeline.__version__
# The full version, including alpha/beta/rc tags.
#release = pipeline.__version__

pipeline_version = pipeline.environment.pipeline_revision.split('-')[0]
version = pipeline_version
release = pipeline_version

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = [
    '_build',
    'Thumbs.db',
    '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
#pygments_style = 'sphinx'
pygments_style = 'default'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output -------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'


# Theme options are theme-specific and customize the look and feel of a
# theme further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']


# -- Options for HTMLHelp output ---------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'pipeline_doc'


# -- Options for LaTeX output ------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    'preamble': r'''
  \usepackage{hyperref}
  \setcounter{tocdepth}{3}
''',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',

    # remove blank pages (between the title page and the TOC, etc.)
    #
    'classoptions': ',openany,oneside',
    'babel': '\\usepackage[english]{babel}',
}

# If false, no module index is generated.
latex_use_modindex = True

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass
# [howto, manual, or own class]).
latex_documents = [
    ('latex', 'pipeline.tex',
     'Pipeline Documentation',
     'pipeline team', 'manual'),
]


# -- Options for manual page output ------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'pipeline',
     'Pipeline Documentation',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'pipeline',
     'Pipeline @ NRAO Documentation',
     author,
     'pipeline',
     'placeholder',
     'Miscellaneous'),
]

# -- Sidebars

html_sidebars = {
    '**': ['localtoc.html'],
    'search': [],
    'genindex': [],
    'py-modindex': [],
}

# -- napoleon

napoleon_google_docstring = True
apoleon_numpy_docstring = False
napoleon_use_param = False
napoleon_use_ivar = True


verbatimwrapslines = False
html_show_sourcelink = True
autosummary_generate = True
autosummary_generate_overwrite = False
autosummary_imported_members = True
#autosummary_ignore_module_all = False
#autodoc_mock_imports = ["pipeline"]
#autodoc_default_options = ['members']


# -- intersphinx

# intersphinx_mapping = {
#     'python': ('https://docs.python.org/3', None),
#     'astropy':  ('http://docs.astropy.org/en/stable', None),
# }


#intersphinx_mapping = {'python': ('https://docs.python.org/3', None)}
#intersphinx_mapping['astropy'] = ('http://docs.astropy.org/en/latest/', None)
#intersphinx_mapping['pyerfa'] = ('https://pyerfa.readthedocs.io/en/stable/', None)
#intersphinx_mapping['pytest'] = ('https://pytest.readthedocs.io/en/stable/', None)
#intersphinx_mapping['ipython'] = ('https://ipython.readthedocs.io/en/stable/', None)
#intersphinx_mapping['pandas'] = ('https://pandas.pydata.org/pandas-docs/stable/', None)
#intersphinx_mapping['sphinx_automodapi'] = ('https://sphinx-automodapi.readthedocs.io/en/stable/', None)
#intersphinx_mapping['packagetemplate'] = ('http://docs.astropy.org/projects/package-template/en/latest/', None)
#intersphinx_mapping['h5py'] = ('http://docs.h5py.org/en/stable/', None)


def setup(app):
    app.add_css_file('custom_theme.css')

# astrorefs


bibtex_bibfiles = ['references/pipeline.bib']
bibtex_encoding = "utf-8"
astrorefs_resolve_aas_macros = True
astrorefs_resolve_aas_macros_infile = 'references/pipeline.bib'
astrorefs_resolve_aas_macros_outfile = 'references/pipeline-resolved.bib'
