<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://casa.nrao.edu/schema/psetTypes.html">

<task category="pipeline" name="hsdn_restoredata" type="function">
<shortdescription>Restore flagged and calibration single dish data from a pipeline run</shortdescription>
<description>
The hsdn_restoredata task restores flagged and calibrated MeasurementSets
from archived ASDMs and pipeline flagging and calibration date products.

pipeline context defined parameter argument which can be set only in
'interactive mode'

The hsdn_restoredata task restores flagged and calibrated data from archived
ASDMs and pipeline flagging and calibration data products. Pending archive
retrieval support hsdn_restoredata assumes that the required products
are available in the rawdata_dir in the format produced by the
hifa_exportdata task.

hsdn_restoredata assumes that the following entities are available in the raw
data directory

o the ASDMs to be restored
o for each ASDM in the input list
   o a compressed tar file of the final flagversions file, e.g.
     uid___A002_X30a93d_X43e.ms.flagversions.tar.gz
   o a text file containing the applycal instructions, e.g.
     uid___A002_X30a93d_X43e.ms.calapply.txt
   o a compressed tar file containing the caltables for the parent session,
     e.g. uid___A001_X74_X29.session_3.caltables.tar.gz

hsdn_restoredata performs the following operations

o imports the ASDM(s))
o removes the default MS.flagversions directory created by the filler
o restores the final MS.flagversions directory stored by the pipeline
o restores the final set of pipeline flags to the MS
o restores the final calibration state of the MS
o restores the final calibration tables for each MS
o applies the calibration tables to each MS


Output:

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
   the results object for the pipeline task is returned.
</description>

<input>
    <param name="vis" type="stringVec">
        <shortdescription>List of input visibility data</shortdescription>
        <description>List of raw visibility data files to be restored. Assumed to be
        in the directory specified by rawdata_dir.

        example: vis=['uid___A002_X30a93d_X43e']</description>
        <value/>
    </param>

    <param mustexist="true" name="scalefile" type="path">
        <shortdescription>File of factors to adjust scale between beams</shortdescription>
        <description>Path to a file containing scaling factors between beams.
        The format is equals to jyperk.csv with five fields:
        MS name, antenna name, spectral window id, polarization string,
        and the scaling factor. Example for the file is as follows:

        MS,Antenna,Spwid,Polarization,Factor
        mg2-20181016165248-181017.ms,NRO-BEAM0,0,I,1.000000000
        mg2-20181016165248-181017.ms,NRO-BEAM0,1,I,1.000000000
        mg2-20181016165248-181017.ms,NRO-BEAM0,2,I,1.000000000
        mg2-20181016165248-181017.ms,NRO-BEAM0,3,I,1.000000000
        mg2-20181016165248-181017.ms,NRO-BEAM1,0,I,3.000000000
        mg2-20181016165248-181017.ms,NRO-BEAM1,1,I,3.000000000
        mg2-20181016165248-181017.ms,NRO-BEAM1,2,I,3.000000000
        mg2-20181016165248-181017.ms,NRO-BEAM1,3,I,3.000000000
        mg2-20181016165248-181017.ms,NRO-BEAM2,0,I,0.500000000
        mg2-20181016165248-181017.ms,NRO-BEAM2,1,I,0.500000000
        mg2-20181016165248-181017.ms,NRO-BEAM2,2,I,0.500000000
        mg2-20181016165248-181017.ms,NRO-BEAM2,3,I,0.500000000
        mg2-20181016165248-181017.ms,NRO-BEAM3,0,I,2.000000000
        mg2-20181016165248-181017.ms,NRO-BEAM3,1,I,2.000000000
        mg2-20181016165248-181017.ms,NRO-BEAM3,2,I,2.000000000
        mg2-20181016165248-181017.ms,NRO-BEAM3,3,I,2.000000000

        If no file name is specified or specified file doesn't exist,
        all the factors are set to 1.0.

        example: scalefile='', scalefile='working/nroscalefile.csv'</description>
        <value>nroscalefile.csv</value>
    </param>

    <param subparam="true" name="infiles" type="stringVec">
        <shortdescription>List of input MeasurementSets</shortdescription>
        <description>List of input MeasurementSets.

        example: vis='ngc5921.ms'</description>
        <value/>
    </param>

    <param subparam="true" name="caltable" type="stringVec">
        <shortdescription>List of output caltable(s)</shortdescription>
        <description>Name of output gain calibration tables.

        example: caltable='ngc5921.gcal'</description>
        <value/>
    </param>

    <param name="products_dir" type="string">
        <shortdescription>The archived pipeline data products directory</shortdescription>
        <description>Name of the data products directory. Currently not
        used.

        example: products_dir='myproductspath'</description>
        <value>../products</value>
    </param>

    <param name="copytoraw" type="bool">
        <shortdescription>Copy calibration and flagging tables to raw data directory</shortdescription>
        <description>Copy calibration and flagging tables to raw data directory.

        example: copytoraw=False</description>
        <value>True</value>
    </param>

    <param name="rawdata_dir" type="string">
        <shortdescription>The raw data directory</shortdescription>
        <description>Name of the raw data directory.

        example: rawdata_dir='myrawdatapath'</description>
        <value>../rawdata</value>
    </param>

    <param name="pipelinemode" type="string">
        <shortdescription>The pipeline operating mode</shortdescription>
        <description>The pipeline operating mode. In 'automatic' mode the pipeline
         determines the values of all context defined pipeline inputs automatically.
         In 'interactive' mode the user can set the pipeline context defined
         parameters manually.  In 'getinputs' mode the user can check the settings
         of all pipeline parameters without running the task.</description>
        <value>automatic</value>
        <allowed kind="enum">
            <value>automatic</value>
            <value>interactive</value>
            <value>getinputs</value>
        </allowed>
    </param>

    <param subparam="true" name="overwrite" type="bool">
        <description>Overwrite existing files on import</description>
        <value>False</value>
    </param>

    <param subparam="true" name="nocopy" type="bool">
        <description>Disable copying of MS to working directory</description>
        <value>False</value>
    </param>

    <param name="createmms" type="string">
        <description>Create an MMS</description>
    <value>automatic</value>
        <allowed kind="enum">
            <value>automatic</value>
            <value>true</value>
            <value>false</value>
        </allowed>
    </param>

    <param subparam="true" name="dryrun" type="bool">
        <shortdescription>Run the task (False) or display task command (True)</shortdescription>
        <description>Run the commands (True) or generate the commands to be run but
        do not execute (False).</description>
        <value>False</value>
    </param>

    <param subparam="true" name="acceptresults" type="bool">
        <shortdescription>Add the results into the pipeline context</shortdescription>
        <description>Add the results of the task to the pipeline context (True) or
        reject them (False).</description>
        <value>True</value>
    </param>

<constraints>
    <when param="pipelinemode">
          <equals value="automatic" type="string"></equals>
          <equals value="interactive" type="string">
              <default param="dryrun"><value type="bool">False</value></default>
              <default param="acceptresults"><value type="bool">True</value></default>
          </equals>
          <equals value="getinputs" type="string"></equals>
    </when>
</constraints>

</input>

<returns>any</returns>


<example>
1. Restore the pipeline results for a single ASDM in a single session

    hsdn_restoredata (vis=['uid___A002_X30a93d_X43e'], scalefile='scalefile.csv')
</example>
</task>
</casaxml>
