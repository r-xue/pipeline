<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://casa.nrao.edu/schema/psetTypes.html">

<task category="pipeline" name="hsd_importdata" type="function">
<shortdescription>Imports data into the single dish pipeline</shortdescription>
<description>
The hsd_importdata task loads the specified visibility data into the pipeline
context unpacking and / or converting it as necessary.

Output:

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
   the results object for the pipeline task is returned.
</description>
<input>
    <param name="vis" type="stringVec">
        <shortdescription>List of input visibility data</shortdescription>
        <description>List of visibility data files. These may be ASDMs, tar files of ASDMs,
        MSes, or tar files of MSes, If ASDM files are specified, they will be
        converted to MS format.
        example: vis=['X227.ms', 'asdms.tar.gz']</description>
        <value/>
    </param>

    <param name="session" type="stringVec">
        <shortdescription>List of visibility data sessions</shortdescription>
        <description>List of sessions to which the visibility files belong. Defaults
        to a single session containing all the visibility files, otherwise
        a session must be assigned to each vis file.
        example: session=['Session_1', 'Sessions_2']</description>
        <value/>
    </param>

    <param name="pipelinemode" type="string">
        <shortdescription>The pipeline operating mode</shortdescription>
        <description>The pipeline operating mode. In 'automatic' mode the pipeline
        determines the values of all context defined pipeline inputs
        automatically.  In 'interactive' mode the user can set the pipeline
        context defined parameters manually.  In 'getinputs' mode the user
        can check the settings of all pipeline parameters without running
        the task.</description>
        <value>automatic</value>
        <allowed kind="enum">
            <value>automatic</value>
            <value>interactive</value>
            <value>getinputs</value>
        </allowed>
    </param>

    <param subparam="true" name="asis" type="string">
        <shortdescription>ASDM to convert as is</shortdescription>
        <description>ASDM tables to convert as is
        Parameter is not available when pipelinemode='automatic'.
        example: 'Receiver', ''</description>
        <value>SBSummary ExecBlock Antenna Station Receiver Source CalAtmosphere CalWVR SpectralWindow</value>
    </param>

    <param subparam="true" name="process_caldevice" type="bool">
        <shortdescription>Import the caldevice table from the ASDM</shortdescription>
        <description>Ingest the ASDM caldevice table.
        Parameter is not available when pipelinemode='automatic'.
        example: True</description>
        <value>False</value>
    </param>

    <param subparam="true" name="overwrite" type="bool">
        <shortdescription>Overwrite existing files on import</shortdescription>
        <description>Overwrite existing MSes on output.
        Parameter is not available when pipelinemode='automatic'.</description>
        <value>False</value>
    </param>

    <param subparam="true" name="nocopy" type="bool">
        <shortdescription>Disable copying of MS to working directory</shortdescription>
        <description>Disable copying of MS to working directory
        Parameter is not available when pipelinemode='automatic'.</description>
        <value>False</value>
    </param>

    <param subparam="true" name="bdfflags" type="bool">
        <shortdescription>Apply BDF flags on import</shortdescription>
        <description>Apply BDF flags on line.
        Parameter is not available when pipelinemode='automatic'.</description>
        <value>True</value>
    </param>

    <param name="lazy" type="bool">
        <shortdescription>Use the lazy import option</shortdescription>
        <description>Use the lazy filter import</description>
        <value>False</value>
    </param>

    <param name="with_pointing_correction" type="bool">
	<shortdescription>Apply pointing correction to DIRECTION</shortdescription>
        <description>add (ASDM::Pointing::encoder - ASDM::Pointing::pointingDirection)
        to the value to be written in MS::Pointing::direction</description>
	<value>True</value>
    </param>

    <param name="createmms" type="string">
        <description>Create an MMS</description>
        <value>false</value>
        <allowed kind="enum">
            <value>automatic</value>
            <value>true</value>
            <value>false</value>
        </allowed>
    </param>

    <param subparam="true" name="dryrun" type="bool">
        <shortdescription>Run the task (False) or display task command (True)</shortdescription>
        <description>Run the task (False) or display task command (True).
        Parameter is available only when pipelinemode='interactive'.</description>
        <value>False</value>
    </param>

    <param subparam="true" name="acceptresults" type="bool">
        <shortdescription>Add the results into the pipeline context</shortdescription>
        <description> Add the results of the task to the pipeline context (True) or reject them (False).
        Parameter is available only when pipelinemode='interactive'.</description>
        <value>True</value>
    </param>

    <constraints>
    <when param="pipelinemode">
        <equals value="automatic" type="string">
        </equals>
        <equals value="interactive" type="string">
        <default param="asis"><value type="string">SBSummary ExecBlock Antenna Station Receiver Source CalAtmosphere CalWVR</value></default>
        <default param="process_caldevice"><value type="bool">False</value></default>
        <default param="overwrite"><value type="bool">False</value></default>
        <default param="nocopy"><value type="bool">False</value></default>
        <default param="bdfflags"><value type="bool">True</value></default>
        <default param="dryrun"><value type="bool">False</value></default>
        <default param="acceptresults"><value type="bool">True</value></default>
        </equals>
        <equals value="getinputs" type="string">
        <default param="asis"><value type="string">SBSummary ExecBlock Antenna Station Receiver Source CalAtmosphere CalWVR</value></default>
        <default param="process_caldevice"><value type="bool">False</value></default>
        <default param="overwrite"><value type="bool">False</value></default>
        <default param="nocopy"><value type="bool">False</value></default>
        <default param="bdfflags"><value type="bool">True</value></default>
        </equals>
    </when>
    </constraints>

</input>


<returns>any</returns>


<example>
1. Load an ASDM list in the ../rawdata subdirectory into the context.

   hsd_importdata (vis=['../rawdata/uid___A002_X30a93d_X43e',
                '../rawdata/uid_A002_x30a93d_X44e'])

2. Load an MS in the current directory into the context.

   hsd_importdata (vis=['uid___A002_X30a93d_X43e.ms'])

3. Load a tarred ASDM in ../rawdata into the context.

   hsd_importdata (vis=['../rawdata/uid___A002_X30a93d_X43e.tar.gz'])

4. Check the hsd_importdata inputs, then import the data

   myvislist = ['uid___A002_X30a93d_X43e.ms', 'uid_A002_x30a93d_X44e.ms']
   hsd_importdata(vis=myvislist, pipelinemode='getinputs')
   hsd_importdata(vis=myvislist)

5. Load an ASDM but check the results before accepting them into the context.

   results = hsd_importdata (vis=['uid___A002_X30a93d_X43e.ms'],
       acceptresults=False)
   results.accept()

6. Run in dryrun mode before running for real
   results = hsd_importdata (vis=['uid___A002_X30a93d_X43e.ms'], dryrun=True)
   results = hsd_importdata (vis=['uid___A002_X30a93d_X43e.ms'])

</example>
</task>
</casaxml>
