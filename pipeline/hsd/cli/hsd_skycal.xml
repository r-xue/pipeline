<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd">

<task category="pipeline" name="hsd_skycal" type="function">
<shortdescription>Calibrate data</shortdescription>
<description>The hsd_skycal generates a caltable for sky calibration that stores
reference spectra, which is to be subtracted from on-source spectra to filter
out non-source contribution.

Output:

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
   the results object for the pipeline task is returned.
</description>
<input>
    <param name="calmode" type="string">
        <shortdescription>Calibration mode (default auto)</shortdescription>
        <description>Calibration mode. Available options are 'auto' (default),
        'ps', 'otf', and 'otfraster'. When 'auto' is set, the task will
        use preset calibration mode that is determined by inspecting data.
        'ps' mode is simple position switching using explicit reference
        scans. Other two modes, 'otf' and 'otfraster', will generate
        reference data from scans at the edge of the map. Those modes
        are intended for OTF observation and the former is defined for
        generic scanning pattern such as Lissajous, while the latter is
        specific use for raster scan.

        options: 'auto', 'ps', 'otf', 'otfraster'</description>
        <value>auto</value>
        <allowed kind="enum">
            <value>auto</value>
            <value>ps</value>
            <value>otf</value>
            <value>otfraster</value>
        </allowed>
    </param>

    <param name="fraction" subparam="true" type="any">
  	    <shortdescription>fraction of the OFF data to mark</shortdescription>
        <description>Sub-parameter for calmode. Edge marking parameter for
        'otf' and 'otfraster' mode. It specifies a number of OFF scans
        as a fraction of total number of data points.

        options: String style like '20%', or float value less than 1.0.
        For 'otfraster' mode, you can also specify 'auto'.</description>
        <any limittype="string double" type="variant"/>
        <value type="string">10%</value>
    </param>

    <param name="noff" subparam="true" type="int">
  	    <shortdescription>number of the OFF data to mark</shortdescription>
        <description>Sub-parameter for calmode. Edge marking parameter for 'otfraster'
        mode. It is used to specify a number of OFF scans near edge directly
        instead to specify it by fractional number by 'fraction'. If it is
        set, the value will come before setting by 'fraction'.

        options: any positive integer value</description>
        <value>-1</value>
    </param>

    <param name="width" subparam="true" type="double">
  	    <shortdescription>width of the pixel for edge detection</shortdescription>
        <description>Sub-parameter for calmode. Edge marking parameter for 'otf'
        mode. It specifies pixel width with respect to a median spatial
        separation between neighboring two data in time. Default will
        be fine in most cases.

        options: any float value</description>
        <value>0.5</value>
    </param>

    <param name="elongated" subparam="true" type="bool">
  	    <shortdescription>whether observed area is elongated in one direction or not</shortdescription>
        <description>Sub-parameter for calmode. Edge marking parameter for
        'otf' mode. Please set True only if observed area is elongated
        in one direction.</description>
        <value>False</value>
    </param>

    <param name="pipelinemode" type="string">
      	<shortdescription>The pipeline operating mode</shortdescription>
        <description>The pipeline operating mode. In 'automatic' mode the
        pipeline determines the values of all context defined pipeline inputs
        automatically. In 'interactive' mode the user can set the pipeline
        context defined parameters manually. In 'getinputs' mode the user
        can check the settings of all pipeline parameters without running
        the task.</description>
      	<value>automatic</value>
      	<allowed kind="enum">
      	    <value>automatic</value>
      	    <value>interactive</value>
      	    <value>getinputs</value>
      	</allowed>
    </param>

    <param name="infiles" subparam="true" type="stringVec">
        <shortdescription>List of input files to be calibrated (default all)</shortdescription>
        <description>List of data files. These must be a name of MeasurementSets that
        are registered to context via hsd_importdata task.

        example: vis=['X227.ms', 'X228.ms']</description>
        <value/>
    </param>

    <param name="field" subparam="true" type="string">
        <shortdescription>Field to be calibrated (default all)</shortdescription>
        <description>Data selection by field name.</description>
        <value/>
    </param>

    <param name="spw" subparam="true" type="any">
        <shortdescription>select data by spw ids, e.g. \'3,5,7\' (\'\'=all)</shortdescription>
        <description>Data selection by spw. (defalut all spws)

        example: '3,4' (generate caltable for spw 3 and 4)
                ['0','2'] (spw 0 for first data, 2 for second)</description>
        <type>string</type>
        <type>stringVec</type>
        <value type="string"/>
    </param>

    <param name="scan" subparam="true" type="any">
        <shortdescription>select data by scan numbers, e.g. \'21~23\' (\'\'=all)</shortdescription>
        <description>Data selection by scan number. (default all scans)

        example: '22,23' (use scan 22 and 23 for calibration)
                ['22','24'] (scan 22 for first data, 24 for second)</description>
        <type>string</type><type>stringVec</type>
        <value type="string"/>
    </param>

    <param name="dryrun" subparam="true" type="bool">
      	<shortdescription>Run the task (False) or display task command (True)</shortdescription>
        <description>Run the commands (True) or generate the commands to be run but
        do not execute (False).</description>
      	<value>False</value>
    </param>

    <param name="acceptresults" subparam="true" type="bool">
        <shortdescription>Add the results into the pipeline context</shortdescription>
        <description>Add the results of the task to the pipeline context (True) or
        reject them (False).</description>
        <value>True</value>
    </param>

    <constraints>
        <when param="calmode">
            <equals value="auto"/>
            <equals value="ps"/>
            <equals value="otf">
                <default param="fraction"><value type="string">10%</value></default>
                <default param="width"><value type="double">0.5</value></default>
                <default param="elongated"><value type="bool">False</value></default>
            </equals>
            <equals value="otfraster">
                <default param="fraction"><value type="string">10%</value></default>
                <default param="noff"><value type="int">-1</value></default>
            </equals>
        </when>
	<when param="pipelinemode">
	    <equals type="string" value="automatic">
	    </equals>
	    <equals type="string" value="interactive">
                <default param="infiles"><value type="stringVec"/></default>
                <default param="field"><value type="string"/></default>
                <default param="spw"><value type="string"/></default>
                <default param="scan"><value type="string"/></default>
                <default param="pol"><value type="string"/></default>
		<default param="dryrun"><value type="bool">False</value></default>
		<default param="acceptresults"><value type="bool">True</value></default>
	    </equals>
	    <equals type="string" value="getinputs">
                <default param="infiles"><value type="stringVec"/></default>
                <default param="field"><value type="string"/></default>
                <default param="spw"><value type="string"/></default>
                <default param="scan"><value type="string"/></default>
                <default param="pol"><value type="string"/></default>
	    </equals>
	</when>
    </constraints>

</input>


<returns>any</returns>


<example>
1. Generate caltables for all data managed by context.
   default(hsd_skycal)
   hsd_skycal()
</example>
</task>
</casaxml>
