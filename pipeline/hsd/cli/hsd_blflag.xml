<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://casa.nrao.edu/schema/psetTypes.html">

<task category="pipeline" name="hsd_blflag" type="function">
<shortdescription>Flag spectra based on predefined criteria of single dish pipeline</shortdescription>

<description>
Data are flagged based on several flagging rules. Available rules are: 
expected rms, calculated rms, and running mean of both pre-fit and 
post-fit spectra. Tsys flagging is also available. 

In addition, the heuristics script creates many plots for each stage. 
Those plots are included in the weblog.

Output:

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
       the results object for the pipeline task is returned.

</description>
<input>
    <param name="iteration" type="int">
        <shortdescription>Number of iteration to perform sigma clipping to calculate threshold</shortdescription>
        <description>Number of iterations to perform sigma clipping to 
                     calculate threshold value of flagging.
        </description>
        <value>5</value>
    </param>

    <param name="edge" type="intVec">
        <shortdescription>Number of edge channels to be excluded from statistic calculation to flag data</shortdescription>
        <description>Number of channels to be dropped from the edge.
                     The value must be a list of integer with length of one or
		     two. If list length is one, same number will be applied 
                     both side of the band.

                     example: [10,20], [10]
        </description>
        <value><value>0</value><value>0</value></value>
    </param>


    <param name="flag_tsys" type="bool">
        <shortdescription>Flag data by Tsys value</shortdescription>
        <description>Activate (True) or deactivate (False) Tsys flag.
        </description>
        <value>True</value>
    </param>
        
    <param subparam="true" name="tsys_thresh" type="double">
        <shortdescription>Threshold for Tsys flag</shortdescription>
        <description>Threshold value for Tsys flag.
        </description>
        <value>3.0</value>
    </param>
        
    <param name="flag_weath" type="bool">
        <shortdescription>Flag data by weather (not implemented yet)</shortdescription>
        <description>Activate (True) or deactivate (False) weather flag. 
                     Since weather flagging is not implemented yet, 
                     setting True has no effect at the moment.
        </description>
        <value>False</value>
    </param>

    <param subparam="true" name="weath_thresh" type="double">
        <shortdescription>Threshold for weather flag</shortdescription>
        <description>Threshold value for weather flag.</description>
        <value>3.0</value>
    </param>

    <param name="flag_prfre" type="bool">
        <shortdescription>Flag data by EXPECTED RMS of pre-fit spectra</shortdescription>
        <description>Activate (True) or deactivate (False) flag by expected 
                     rms of pre-fit spectra.
        </description>
        <value>True</value>
    </param>

    <param subparam="true" name="prfre_thresh" type="double">
        <shortdescription>Threshold for EXPECTED RMS of pre-fit spectra flag</shortdescription>
        <description>Threshold value for flag by expected rms of pre-fit 
                     spectra. 
        </description>
        <value>3.0</value>
    </param>

    <param name="flag_pofre" type="bool">
        <shortdescription>Flag data by EXPECTED RMS of post-fit spectra</shortdescription>
        <description>Activate (True) or deactivate (False) flag by expected 
                     rms of post-fit spectra.
        </description>
        <value>True</value>
    </param>

    <param subparam="true" name="pofre_thresh" type="double">
        <shortdescription>Threshold for EXPECTED RMS of post-fit spectra flag</shortdescription>
        <description>Threshold value for flag by expected rms of post-fit 
                     spectra. 
        </description>
        <value>1.3333</value>
    </param>

    <param name="flag_prfr" type="bool">
        <shortdescription>Flag data by RMS of pre-fit spectra</shortdescription>
        <description>Activate (True) or deactivate (False) flag by rms of 
                    pre-fit spectra.
        </description>
        <value>True</value>
    </param>

    <param subparam="true" name="prfr_thresh" type="double">
        <shortdescription>Threshold for RMS of pre-fit flag</shortdescription>
        <description>Threshold value for flag by rms of pre-fit spectra.</description>
        <value>4.5</value>
    </param>

    <param name="flag_pofr" type="bool">
        <shortdescription>Flag data by RMS of post-fit spectra</shortdescription>
        <description>Activate (True) or deactivate (False) flag by rms of
                      post-fit spectra.
        </description>
        <value>True</value>
    </param>

    <param subparam="true" name="pofr_thresh" type="double">
        <shortdescription>Threshold for RMS of post-fit spectra flag</shortdescription>
        <description>Threshold value for flag by rms of post-fit spectra. 
        </description>
        <value>4.0</value>
    </param>

    <param name="flag_prfrm" type="bool">
        <shortdescription>Flag data by running mean of pre-fit spectra</shortdescription>
        <description>Activate (True) or deactivate (False) flag by running 
                     mean of pre-fit spectra.
        </description>
        <value>True</value>
    </param>

    <param subparam="true" name="prfrm_thresh" type="double">
        <shortdescription>Threshold for running mean of pre-fit spectra flag</shortdescription>
        <description>Threshold value for flag by running mean of pre-fit 
                     spectra. 
        </description>
        <value>5.5</value>
    </param>

    <param subparam="true" name="prfrm_nmean" type="int">
        <shortdescription>Number of channels for running mean of pre-fit spectra flag</shortdescription>
        <description>Number of channels for running mean of pre-fit spectra.
        </description>
        <value>5</value>
    </param>

    <param name="flag_pofrm" type="bool">
        <shortdescription>Flag data by running mean of post-fit spectra</shortdescription>
        <description>Activate (True) or deactivate (False) flag by running 
                     mean of post-fit spectra.
        </description>
        <value>True</value>
    </param>

    <param subparam="true" name="pofrm_thresh" type="double">
        <shortdescription>Threshold for running mean of post-fit spectra flag</shortdescription>
        <description>Threshold value for flag by running mean of post-fit 
                     spectra. 
        </description>
        <value>5.0</value>
    </param>

    <param subparam="true" name="pofrm_nmean" type="int">
        <shortdescription>Number of channels for running mean of post-fit spectra flag</shortdescription>
        <description>Number of channels for running mean of post-fit spectra.
        </description>
        <value>5</value>
    </param>

    <param name="flag_user" type="bool">
        <shortdescription>Flag data by user flag (not implemented yet)</shortdescription>
        <description>Activate (True) or deactivate (False) user-defined flag. 
                     Since user flagging is not implemented yet, setting True 
                     has no effect at the moment.
        </description>
        <value>False</value>
    </param>

    <param subparam="true" name="user_thresh" type="double">
        <shortdescription>Threshold for user flag</shortdescription>
        <description>Threshold value for flag by user-defined rule.
        </description>
        <value>5.0</value>
    </param>

    <param name="plotflag" type="bool">
        <shortdescription>Create plots for flagging</shortdescription>
        <description>True to plot result of data flagging.
        </description>
        <value>True</value>
    </param>

    <param name="pipelinemode" type="string">
        <shortdescription>The pipeline operating  mode</shortdescription>
        <description>The pipeline operating mode. In 'automatic' mode the 
                     pipeline determines the values of all context defined 
                     pipeline inputs automatically.  In interactive mode 
                     the user can set the pipeline context defined parameters 
                     manually. In 'getinputs' mode  the user can check the 
                     settings of all pipeline parameters without running 
                     the task.
        </description>
        <value>automatic</value>
        <allowed kind="enum">
            <value>automatic</value>
            <value>interactive</value>
            <value>getinputs</value>
        </allowed>
    </param>

    <param subparam="true" name="infiles" type="stringVec">
        <shortdescription>List of input files to be flagged (\'\'=all)</shortdescription>
        <description>ASDM or MS files to be processed. This parameter behaves
                     as data selection parameter. The name specified by 
                     infiles must be registered to context before you run
                     hsd_blflag.
	</description>
        <value/>
    </param>

    <param subparam="true" name="antenna" type="string">
            <shortdescription>select data by antenna names or ids, e.g. \'PM03,PM04\' (\'\'=all)</shortdescription>
            <description>Data selection by antenna names or ids.
                         example: 'PM03,PM04'
                                  '' (all antennas)
            </description>
            <value type="string"/>
    </param>
    <param subparam="true" name="field" type="string">
            <shortdescription>select data by field names or ids, e.g. \'M100,Sgr*\' (\'\'=all)</shortdescription>
            <description>Data selection by field names or ids.
                         example: '*Sgr*,M100'
                                  '' (all fields)
            </description>
            <value type="string"/>
    </param>
    <param subparam="true" name="spw" type="string">
            <shortdescription>select data by spectral windows, e.g. \'3,5,7\' (\'\'=all)</shortdescription>
            <description>Data selection by spw ids.
                         example: '3,4' (spw 3 and 4)
                                  '' (all spws)
            </description>
            <value type="string"/>
    </param>

    <param subparam="true" name="pol" type="string">
            <shortdescription>select data by polarizations, e.g. \'XX,YY\' (\'\'=all)</shortdescription>
            <description>Data selection by polarizations.
                         example: 'XX,YY' (correlation XX and YY)
                                  '' (all polarizations)
            </description>
            <value type="string"/>
    </param>

    <param subparam="true" name="dryrun" type="bool">
        <shortdescription>Run the task (False) or display the task command (True)</shortdescription>
        <description>Run the commands (True) or generate the commands to be
                     run but do not execute (False).
        </description>
        <value>False</value>
    </param>

    <param subparam="true" name="acceptresults" type="bool">
        <shortdescription>Add the results into the pipeline context</shortdescription>
        <description>Add the results of the task to the pipeline context (True)
                     or reject them (False).
        </description>
        <value>True</value>
    </param>

    <param subparam="true" name="parallel" type="string">
        <description>Execute using CASA HPC functionality, if available.</description>
            <value>automatic</value>
            <allowed kind="enum">
                <value>automatic</value>
                <value>true</value>
                <value>false</value>
            </allowed>
    </param>

    <constraints>
        <when param="flag_tsys">
            <equals value="True" type="bool">
                <default param="tsys_thresh"><value type="double">3.0</value></default>
            </equals>
            <equals value="False" type="bool">
            </equals>
        </when>
        <when param="flag_weath">
            <equals value="False" type="bool">
            </equals>
            <equals value="True" type="bool">
                <default param="weath_thresh"><value type="double">3.0</value></default>
            </equals>
        </when>
        <when param="flag_prfre">
            <equals value="True" type="bool">
                <default param="prfre_thresh"><value type="double">3.0</value></default>
            </equals>
            <equals value="False" type="bool">
            </equals>
        </when>
        <when param="flag_pofre">
            <equals value="True" type="bool">
                <default param="pofre_thresh"><value type="double">1.3333</value></default>
            </equals>
            <equals value="False" type="bool">
            </equals>
        </when>
        <when param="flag_prfr">
            <equals value="True" type="bool">
                <default param="prfr_thresh"><value type="double">4.5</value></default>
            </equals>
            <equals value="False" type="bool">
            </equals>
        </when>
        <when param="flag_pofr">
            <equals value="True" type="bool">
                <default param="pofr_thresh"><value type="double">4.0</value></default>
            </equals>
            <equals value="False" type="bool">
            </equals>
        </when>
        <when param="flag_prfrm">
            <equals value="True" type="bool">
                <default param="prfrm_thresh"><value type="double">5.5</value></default>
                <default param="prfrm_nmean"><value type="int">5</value></default>
            </equals>
            <equals value="False" type="bool">
            </equals>
        </when>
        <when param="flag_pofrm">
            <equals value="True" type="bool">
                <default param="pofrm_thresh"><value type="double">5.0</value></default>
                <default param="pofrm_nmean"><value type="int">5</value></default>
            </equals>
            <equals value="False" type="bool">
            </equals>
        </when>
        <when param="flag_user">
            <equals value="False" type="bool">
            </equals>
            <equals value="True" type="bool">
                <default param="user_thresh"><value type="double">5.0</value></default>
                            </equals>
        </when>
        <when param="pipelinemode">
            <equals value="automatic" type="string">
            </equals>
            <equals value="interactive" type="string">
                <default param="infiles"><value type="stringVec"/></default>
                <default param="antenna"><value type="string"/></default>
                <default param="field"><value type="string"/></default>
                <default param="spw"><value type="string"/></default>
                <default param="pol"><value type="string"/></default>
                <default param="dryrun"><value type="bool">False</value></default>
                <default param="acceptresults"><value type="bool">True</value></default>
                <default param="parallel"><value type="string">automatic</value></default>
            </equals>
            <equals value="getinputs" type="string">
                <default param="infiles"><value type="stringVec"/></default>
                <default param="antenna"><value type="string"/></default>
                <default param="field"><value type="string"/></default>
                <default param="spw"><value type="string"/></default>
                <default param="pol"><value type="string"/></default>
            </equals>
        </when>
    </constraints>

</input>


<returns>any</returns>


</task>
</casaxml>
