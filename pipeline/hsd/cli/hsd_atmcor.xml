<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd">

<task category="pipeline" name="hsd_atmcor" type="function">
<shortdescription>Apply offline ATM correction to the data.</shortdescription>

<description>
</description>

<input>
    <param name="atmtype" type="any">
        <shortdescription>Type of atmospheric transmission model (1,2,3,4,5)</shortdescription>
        <description>
        Type of atmospheric transmission model represented as an integer.
        Available options are as follows. Integer values can be given as
        either integer or string, i.e. both 1 and '1' are acceptable.

          'auto': perform heuristics to choose best model (default)
               1: tropical
               2: mid latitude summer
               3: mid latitude winter
               4: subarctic summer
               5: subarctic winter

        If list of integer is given, it also performs heuristics using the
        provided values instead of default, [1, 2, 3, 4], which is used
        when 'auto' is provided. List input should not contain 'auto'.

        Default: 'auto'
        </description>
        <any type="variant" limittypes="string int intArray"/>
        <value type="string">auto</value>
    </param>

    <param name="dtem_dh" type="any">
        <shortdescription>temperature gradient [K/km], e.g. -5.6. (&quot;&quot; = Tool default) </shortdescription>
        <description>temperature gradient [K/km], e.g. -5.6. (&quot;&quot; = Tool default)

                       The value is directly passed to initialization method for ATM model.
                       Float and string types are acceptable. Float value is interpreted as
                       the value in K/km. String value should be the numeric value with unit
                       such as '-5.6K/km'. When list of values are given, it will
                       trigger heuristics to choose best model from the provided value.

                       Default: '' (tool default, -5.6K/km, is used)

        </description>
        <any type="variant"  limittypes="string double stringArray doubleArray"/>
        <value type="string">-5.6K/km</value>
    </param>

    <param name="h0" type="any">
        <shortdescription>scale height for water [km], e.g. 2.0. (&quot;&quot; = Tool default)</shortdescription>
        <description>scale height for water [km], e.g. 2.0. (&quot;&quot; = Tool default)

                       The value is directly passed to initialization method for ATM model.
                       Float and string types are acceptable. Float value is interpreted as
                       the value in kilometer. String value should be the numeric value with
                       unit compatible with length, such as '2km' or '2000m'.
                       When list of values are given, it will trigger heuristics to
                       choose best model from the provided value.

                       Default: '' (tool default, 2.0km, is used)

        </description>
        <any type="variant"  limittypes="string double stringArray doubleArray"/>
        <value type="string">2km</value>
    </param>

    <param name="pipelinemode" type="string">
        <shortdescription>The pipeline operating  mode</shortdescription>
        <description>The pipeline operating mode. In 'automatic' mode the
                     pipeline determines the values of all context defined
                     pipeline inputs automatically.  In interactive mode
                     the user can set the pipeline context defined parameters
                     manually. In 'getinputs' mode  the user can check the
                     settings of all pipeline parameters without running
                     the task.
        </description>
        <value>automatic</value>
        <allowed kind="enum">
            <value>automatic</value>
            <value>interactive</value>
            <value>getinputs</value>
        </allowed>
    </param>

    <param name="infiles" subparam="true" type="stringVec">
        <shortdescription>List of input files to be flagged (\'\'=all)</shortdescription>
        <description>ASDM or MS files to be processed. This parameter behaves
                     as data selection parameter. The name specified by
                     infiles must be registered to context before you run
                     hsd_atmcor.
	</description>
        <value/>
    </param>

    <param name="antenna" subparam="true" type="string">
            <shortdescription>select data by antenna names or ids, e.g. \'PM03,PM04\' (\'\'=all)</shortdescription>
            <description>Data selection by antenna names or ids.
                         example: 'PM03,PM04'
                                  '' (all antennas)
            </description>
            <value type="string"/>
    </param>
    <param name="field" subparam="true" type="string">
            <shortdescription>select data by field names or ids, e.g. \'M100,Sgr*\' (\'\'=all)</shortdescription>
            <description>Data selection by field names or ids.
                         example: '*Sgr*,M100'
                                  '' (all fields)
            </description>
            <value type="string"/>
    </param>
    <param name="spw" subparam="true" type="string">
            <shortdescription>select data by spectral windows, e.g. \'3,5,7\' (\'\'=all)</shortdescription>
            <description>Data selection by spw ids.
                         example: '3,4' (spw 3 and 4)
                                  '' (all spws)
            </description>
            <value type="string"/>
    </param>

    <param name="pol" subparam="true" type="string">
            <shortdescription>select data by polarizations, e.g. \'XX,YY\' (\'\'=all)</shortdescription>
            <description>Data selection by polarizations.
                         example: 'XX,YY' (correlation XX and YY)
                                  '' (all polarizations)
            </description>
            <value type="string"/>
    </param>

    <param name="dryrun" subparam="true" type="bool">
        <shortdescription>Run the task (False) or display the task command (True)</shortdescription>
        <description>Run the commands (True) or generate the commands to be
                     run but do not execute (False).
        </description>
        <value>False</value>
    </param>

    <param name="acceptresults" subparam="true" type="bool">
        <shortdescription>Add the results into the pipeline context</shortdescription>
        <description>Add the results of the task to the pipeline context (True)
                     or reject them (False).
        </description>
        <value>True</value>
    </param>

    <param name="parallel" subparam="true" type="string">
        <shortdescription>Execute using CASA HPC functionality, if available.</shortdescription>
        <description>Execute using CASA HPC functionality, if available.</description>
            <value>automatic</value>
            <allowed kind="enum">
                <value>automatic</value>
                <value>true</value>
                <value>false</value>
            </allowed>
    </param>

    <constraints>
        <when param="pipelinemode">
            <equals type="string" value="automatic">
            </equals>
            <equals type="string" value="interactive">
                <default param="infiles"><value type="stringVec"/></default>
                <default param="antenna"><value type="string"/></default>
                <default param="field"><value type="string"/></default>
                <default param="spw"><value type="string"/></default>
                <default param="pol"><value type="string"/></default>
                <default param="dryrun"><value type="bool">False</value></default>
                <default param="acceptresults"><value type="bool">True</value></default>
                <default param="parallel"><value type="string">automatic</value></default>
            </equals>
            <equals type="string" value="getinputs">
                <default param="infiles"><value type="stringVec"/></default>
                <default param="antenna"><value type="string"/></default>
                <default param="field"><value type="string"/></default>
                <default param="spw"><value type="string"/></default>
                <default param="pol"><value type="string"/></default>
            </equals>
        </when>
    </constraints>

</input>

<returns>any</returns>


</task>
</casaxml>
