<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd">

<task category="pipeline" name="hsd_flagdata" type="function">

<shortdescription>Do basic flagging of a list of MeasurementSets</shortdescription>
<description>
The hsd_flagdata data performs basic flagging operations on a list of
MeasurementSets including:

o applying online flags
o applying a flagging template
o shadowed antenna data flagging
o scan-based flagging by intent or scan number
o edge channel flagging

Output:

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
    the results object for the pipeline task is returned.
</description>

<input>
    <param name="vis" subparam="true" type="stringVec">
        <shortdescription>List of input MeasurementSets to flag</shortdescription>
        <description>The list of input MeasurementSets. Defaults to the list of MeasurementSets
        defined in the pipeline context.</description>
        <value/>
    </param>

    <param name="autocorr" type="bool">
        <shortdescription>Flag autocorrelation data</shortdescription>
        <description>Flag autocorrelation data.</description>
        <value type="bool">False</value>
    </param>

    <param name="shadow" type="bool">
        <shortdescription>Flag shadowed antennas</shortdescription>
        <description>Flag shadowed antennas.</description>
        <value type="bool">True</value>
    </param>

    <param name="scan" type="bool">
        <shortdescription>Flag specified scans</shortdescription>
        <description>Flag a list of specified scans.</description>
        <value>True</value>
    </param>

    <param name="scannumber" subparam="true" type="string">
        <shortdescription>List of scans to be flagged</shortdescription>
        <description>A string containing a comma delimited list of scans to be
        flagged.
        </description>
        <value/>
    </param>

    <param name="intents" subparam="true" type="string">
        <shortdescription>List of intents of scans to be flagged</shortdescription>
        <description>A string containing a comma delimited list of intents against
        which the scans to be flagged are matched.

        example: '*BANDPASS*'</description>
        <value>POINTING,FOCUS,ATMOSPHERE,SIDEBAND,CHECK</value>
    </param>

    <param name="edgespw" type="bool">
        <shortdescription>Flag edge channels</shortdescription>
        <description>Flag the edge spectral window channels.</description>
        <value type="bool">True</value>
    </param>

    <param name="fracspw" subparam="true" type="any">
        <shortdescription>Fraction of baseline correlator edge channels to be flagged</shortdescription>
        <description>Fraction of the baseline correlator TDM edge channels to be flagged.</description>
        <any limittype="double string doubleArray" type="variant"/>
        <value type="string">1.875GHz</value>
    </param>

    <param name="fracspwfps" subparam="true" type="double">
        <shortdescription>Fraction of ACA correlator edge channels to be flagged</shortdescription>
        <description>Fraction of the ACS correlator TDM edge channels to be flagged.</description>
        <value>0.048387</value>
    </param>

    <param name="online" type="bool">
        <shortdescription>Apply the online flags</shortdescription>
        <description>Apply the online flags.</description>
        <value type="bool">True</value>
    </param>

    <param name="fileonline" subparam="true" type="string">
        <shortdescription>File of online flags to be applied</shortdescription>
        <description>File containing the online flags. These are computed by the
        h_init or hif_importdata data tasks. If the online flags files
        are undefined a name of the form 'msname.flagonline.txt' is assumed.</description>
        <value/>
    </param>

    <param name="template" type="bool">
        <shortdescription>Apply a flagging template</shortdescription>
        <description>Apply a flagging template.</description>
        <value>True</value>
    </param>

    <param name="filetemplate" subparam="true" type="stringVec">
        <shortdescription>File that contains the flagging template</shortdescription>
        <description>The name of a text file that contains the flagging template
        for RFI, birdies, telluric lines, etc.  If the template flags files
        is undefined a name of the form 'msname.flagtemplate.txt' is assumed.</description>
        <value/>
    </param>

    <param name="pointing" type="bool">
        <shortdescription>Apply a flagging template for pointing flag</shortdescription>
        <description>Apply a flagging template for pointing flag.</description>
        <value>True</value>
    </param>

    <param name="filepointing" subparam="true" type="stringVec">
        <shortdescription>File that contains the flagging template for pointing flag</shortdescription>
        <description>The name of a text file that contains the flagging template
        for pointing flag. If the template flags files is undefined a name of
        the form 'msname.flagpointing.txt' is assumed.</description>
        <value/>
    </param>

    <param name="incompleteraster" subparam="true" type="bool">
        <shortdescription>Apply commands to flag incomplete raster sequence</shortdescription>
        <description>Apply commands to flag incomplete raster sequence.
        If this is False, relevant commands in filepointing are
        simply commented out.</description>
        <value>True</value>
    </param>

    <param name="hm_tbuff" type="string">
        <shortdescription>The time buffer computation heuristic</shortdescription>
        <description>The heuristic for computing the default time interval padding parameter.
        The options are 'halfint' and 'manual'. In 'halfint' mode tbuff is set to
        half the maximum of the median integration time of the science and calibrator target
        observations.</description>
        <value>halfint</value>
        <allowed kind="enum">
        <value>halfint</value>
        <value>manual</value>
      </allowed>
    </param>

    <param name="tbuff" subparam="true" type="any">
        <shortdescription>List of time buffers (sec) to pad timerange in flag commands</shortdescription>
        <description>The time in seconds used to pad flagging command time intervals if
        hm_tbuff='manual'.</description>
        <type>double</type><type>doubleVec</type>
        <value type="double">0.0</value>
    </param>

    <param name="qa0" type="bool">
        <shortdescription>QA0 flags</shortdescription>
        <description>QA0 flags</description>
        <value>True</value>
    </param>

    <param name="qa2" type="bool">
        <shortdescription>QA2 flags</shortdescription>
        <description>QA2 flags</description>
        <value>True</value>
    </param>

    <param name="pipelinemode" type="string">
        <shortdescription>The pipeline operating mode</shortdescription>
        <description>The pipeline operating mode. In 'automatic' mode the pipeline
        determines the values of all context defined pipeline inputs automatically.
        In interactive mode the user can set the pipeline context defined parameters
        manually.  In 'getinputs' mode the user can check the settings of all
        pipeline parameters without running the task.</description>
        <value>automatic</value>
        <allowed kind="enum">
        <value>automatic</value>
        <value>interactive</value>
        <value>getinputs</value>
        </allowed>
    </param>

    <param name="flagbackup" subparam="true" type="bool">
        <shortdescription>Backup pre-existing flags</shortdescription>
        <description>Back up any pre-existing flags before applying new ones.</description>
        <value type="bool">False</value>
    </param>

    <param name="dryrun" subparam="true" type="bool">
        <shortdescription>Run the task (False) or display the command (True)</shortdescription>
        <description>Run the commands (True) or generate the commands to be run but
        do not execute (False).</description>
        <value>False</value>
    </param>

    <param name="acceptresults" subparam="true" type="bool">
        <shortdescription>Add the results into the pipeline context</shortdescription>
        <description>Add the results of the task to the pipeline context (True) or
        reject them (False).</description>
        <value>True</value>
    </param>

    <constraints>
        <when param="pipelinemode">
            <equals type="string" value="automatic">
            </equals>
            <equals type="string" value="interactive">
                <default param="vis"><value type="stringVec"/></default>
                <default param="flagbackup"><value type="bool">False</value></default>
                <default param="dryrun"><value type="bool">False</value></default>
                <default param="acceptresults"><value type="bool">True</value></default>
            </equals>
            <equals type="string" value="getinputs">
                <default param="vis"><value type="stringVec"/></default>
                <default param="flagbackup"><value type="bool">False</value></default>
            </equals>
        </when>

        <when param="scan">
            <equals type="bool" value="True">
                <default param="scannumber"><value type="string"/></default>
                <default param="intents"><value type="string">POINTING,FOCUS,ATMOSPHERE,SIDEBAND,CHECK</value></default>
            </equals>
            <equals type="bool" value="False">
            </equals>
        </when>

        <when param="edgespw">
            <equals type="bool" value="True">
                <default param="fracspw"><value type="string">1.875GHz</value></default>
                <default param="fracspwfps"><value type="double">0.048387</value></default>
            </equals>
            <equals type="bool" value="False">
            </equals>
        </when>

        <when param="online">
            <equals type="bool" value="True">
                <default param="fileonline"><value type="string"/></default>
            </equals>
            <equals type="bool" value="False">
            </equals>
        </when>

        <when param="template">
            <equals type="bool" value="True">
                <default param="filetemplate"><value type="stringVec"/></default>
            </equals>
            <equals type="bool" value="False">
            </equals>
        </when>

        <when param="pointing">
            <equals type="bool" value="True">
                <default param="filepointing"><value type="stringVec"/></default>
                <default param="incompleteraster"><value type="bool">True</value></default>
            </equals>
            <equals type="bool" value="False">
            </equals>
        </when>

        <when param="hm_tbuff">
            <equals type="string" value="halfint">
            </equals>
            <equals type="string" value="manual">
                <default param="tbuff"><value type="double">0.0</value></default>
            </equals>
        </when>

    </constraints>
</input>


<returns>any</returns>


<example>
1. Do basic flagging on a MeasurementSet

    hsd_flagdata()

2. Do basic flagging on a MeasurementSet flagging additional scans selected
   by number as well.

    hsd_flagdata(scannumber='13,18')
</example>


</task>
</casaxml>
