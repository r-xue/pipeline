<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd">

<task category="pipeline" name="hifv_applycals" type="function">
<shortdescription>Apply calibration tables to measurement set</shortdescription>
<description>hifv_applycals applies the precomputed calibration tables stored in the pipeline
context to the set of visibility files using predetermined field and
spectral window maps and default values for the interpolation schemes.

Users can interact with the pipeline calibration state using the tasks
h_export_calstate and h_import_calstate.
</description>
<input>
    <param name="vis" type="stringVec">
        <shortdescription>List of input visibility data</shortdescription>
        <description>List of visibility data files. These may be ASDMs, tar files of ASDMs,
                     MSes, or tar files of MSes, If ASDM files are specified, they will be
                     converted  to MS format.
                     example: vis=['X227.ms', 'asdms.tar.gz']
        </description>
        <value/>
    </param>

   <param name="field" subparam="true" type="string">
	<shortdescription>Set of data selection field names or ids</shortdescription>
        <description>A string containing the list of field names or field ids to which
                     the calibration will be applied. Defaults to all fields in the pipeline
                     context.  Only can be set in pipelinemode='interactive'.
                     example: '3C279', '3C279, M82'
        </description>
	<value/>
   </param>

   <param name="intent" subparam="true" type="string">
	<shortdescription>Set of data selection observing intents</shortdescription>
        <description>A string containing the list of intents against which the
                     selected fields will be matched. Defaults to all supported intents
                     in the pipeline context.  Only can be set in pipelinemode='interactive'.
                     example: '*TARGET*'
        </description>
	<value/>
   </param>

   <param name="spw" subparam="true" type="string">
	<shortdescription>Set of data selection spectral window/channels</shortdescription>
        <description>The list of spectral windows and channels to which the calibration
                     will be applied. Defaults to all science windows in the pipeline.
                     Only can be set in pipelinemode='interactive'.
                     example: '17', '11, 15'
        </description>
	<value/>
   </param>

   <param name="antenna" subparam="true" type="string">
	<shortdescription>Set of data selection antenna ids</shortdescription>
        <description>The list of antennas to which the calibration will be applied.
                     Defaults to all antennas. Not currently supported.
                     Only can be set in pipelinemode='interactive'.
        </description>
	<value/>
   </param>

    <param name="applymode" type="string">
        <shortdescription>Calibration mode: &quot;&quot;=&quot;calflagstrict&quot;,&quot;calflag&quot;,&quot;calflagstrict&quot;,&quot;trial&quot;,&quot;flagonly&quot;,&quot;flagonlystrict&quot;, or &quot;calonly&quot;</shortdescription>
        <description>Calibration apply mode
                     ''='calflagstrict': calibrate data and apply flags from solutions using
                         the strict flagging convention
                     'trial': report on flags from solutions, dataset entirely unchanged
                     'flagonly': apply flags from solutions only, data not calibrated
                     'calonly': calibrate data only, flags from solutions NOT applied
                     'calflagstrict':
                     'flagonlystrict': same as above except flag spws for which calibration is
                         unavailable in one or more tables (instead of allowing them to pass
                         uncalibrated and unflagged)
        </description>
        <value/>
        <allowed kind="enum">
            <value/>
            <value>calflag</value>
            <value>calflagstrict</value>
            <value>trial</value>
            <value>flagonly</value>
            <value>flagonlystrict</value>
            <value>calonly</value>
        </allowed>
    </param>

    <param name="flagbackup" subparam="true" type="bool">
	<shortdescription>Backup the flags before the apply.  Only can be set in pipelinemode=\'interactive\'.  </shortdescription>
	<description>Backup the flags before the apply.  Only can be set in pipelinemode='interactive'.  </description>
	<value type="bool">True</value>
    </param>

    <param name="flagsum" type="bool">
	<shortdescription>Compute before and after flagging summary statistics</shortdescription>
	<description>Compute before and after flagging summary statistics</description>
	<value type="bool">True</value>
    </param>

    <param name="flagdetailedsum" subparam="true" type="bool">
	<shortdescription>Compute detailed flagging statistics</shortdescription>
	<description>Compute detailed flagging statistics</description>
	<value type="bool">True</value>
    </param>

    <param name="gainmap" type="bool">
	<shortdescription>Mode to map gainfields to scans.</shortdescription>
	<description>Mode to map gainfields to scans.</description>
	<value>False</value>
    </param>

    <param name="pipelinemode" type="string">
        <shortdescription>The pipeline operating mode</shortdescription>
        <description>The pipeline operating mode. In 'automatic' mode the pipeline
                     determines the values of all context defined pipeline inputs
                     automatically.  In 'interactive' mode the user can set the pipeline
                     context defined parameters manually.  In 'getinputs' mode the user
                     can check the settings of all pipeline parameters without running
                     the task.</description>
        <value>automatic</value>
        <allowed kind="enum">
            <value>automatic</value>
            <value>interactive</value>
            <value>getinputs</value>
        </allowed>
    </param>

    <param name="dryrun" subparam="true" type="bool">
        <shortdescription>Run the task (False) or display task command (True)</shortdescription>
        <description>Run the commands (True) or generate the commands to be run but
                     do not execute (False).  This is a pipeline task execution mode.
        </description>
        <value>False</value>
    </param>

    <param name="acceptresults" subparam="true" type="bool">
        <shortdescription>Add the results into the pipeline context</shortdescription>
        <description>Add the results of the task to the pipeline context (True) or
                     reject them (False).  This is a pipeline task execution mode.
        </description>
        <value>True</value>
    </param>

    <constraints>
        <when param="pipelinemode">
	    <equals type="string" value="automatic"/>
	    <equals type="string" value="interactive">
	        <default param="vis"><value type="stringVec"/></default>
	        <default param="field"><value type="string"/></default>
	        <default param="intent"><value type="string"/></default>
	        <default param="spw"><value type="string"/></default>
		<default param="antenna"><value type="string"/></default>
	        <default param="flagbackup"><value type="bool">True</value></default>
	        <default param="dryrun"><value type="bool">False</value></default>
	        <default param="acceptresults"><value type="bool">True</value></default>
	    </equals>
	    <equals type="string" value="getinputs">
	        <default param="vis"><value type="stringVec"/></default>
	        <default param="field"><value type="string"/></default>
	        <default param="intent"><value type="string"/></default>
	        <default param="spw"><value type="string"/></default>
		<default param="antenna"><value type="string"/></default>
	        <default param="flagbackup"><value type="bool">True</value></default>
	    </equals>
        </when>
        <when param="flagsum">
	    <equals type="bool" value="True">
	        <default param="flagdetailedsum"><value type="bool">True</value></default>
	    </equals>
	    <equals type="bool" value="False">
	    </equals>
        </when>
    </constraints>
</input>


<returns>any</returns>

<example>


Output:

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
    the results object for the pipeline task is returned

Issues

There is some discussion about the appropriate values of calwt. Given
properly scaled data, the correct value should be the CASA default of True.
However at the current time ALMA is suggesting that calwt be set to True for
applying observatory calibrations, e.g. antenna positions, WVR, and system
temperature corrections, and to False for applying instrument calibrations,
e.g. bandpass, gain, and flux.


Examples

1. Run the final applycals stage of the VLA CASA pipeline.

hifv_applycals()


</example>
</task>
</casaxml>
