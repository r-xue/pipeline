<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://casa.nrao.edu/schema/psetTypes.html">

<task category="pipeline" name="hifv_applycals" type="function">
<shortdescription>Applycals</shortdescription>
<description>hifv_applycals applies the precomputed calibration tables stored in the pipeline
context to the set of visibility files using predetermined field and
spectral window maps and default values for the interpolation schemes.

Users can interact with the pipeline calibration state using the tasks
hif_export_calstate and hif_import_calstate.
</description>
<input>
    <param name="vis" type="stringVec">
        <shortdescription>List of input visibility data</shortdescription>
        <description>List of visibility data files. These may be ASDMs, tar files of ASDMs,
                     MSes, or tar files of MSes, If ASDM files are specified, they will be
                     converted  to MS format.
                     example: vis=['X227.ms', 'asdms.tar.gz']
        </description>
        <value/>
    </param>

   <param subparam="true" name="field" type="string">
	<description>Set of data selection field names or ids</description>
	<value/>
   </param>

   <param subparam="true" name="intent" type="string">
	<description>Set of data selection observing intents</description>
	<value/>
   </param>

   <param subparam="true" name="spw" type="string">
	<description>Set of data selection spectral window/channels</description>
	<value/>
   </param>

   <param subparam="true" name="antenna" type="string">
	<description>Set of data selection antenna ids</description>
	<value/>
   </param>

    <param name="applymode" type="string">
        <description>Calibration mode: &quot;&quot;=&quot;calflagstrict&quot;,&quot;calflag&quot;,&quot;calflagstrict&quot;,&quot;trial&quot;,&quot;flagonly&quot;,&quot;flagonlystrict&quot;, or &quot;calonly&quot;</description>
        <value/>
        <allowed kind="enum">
            <value/>
            <value>calflag</value>
            <value>calflagstrict</value>
            <value>trial</value>
            <value>flagonly</value>
            <value>flagonlystrict</value>
            <value>calonly</value>
        </allowed>
    </param>

    <param subparam="true" name="flagbackup" type="bool">
	<description>Backup the flags before the apply</description>
	<value type="bool">True</value>
    </param>

    <param name="flagsum" type="bool">
	<description>Compute before and after flagging summary statistics</description>
	<value type="bool">True</value>
    </param>

    <param subparam="true" name="flagdetailedsum" type="bool">
	<description>Compute detailed flagging statistics</description>
	<value type="bool">True</value>
    </param>

    <param name="gainmap" type="bool">
	<description>Mode to map gainfields to scans.</description>
	<value>False</value>
    </param>

    <param name="pipelinemode" type="string">
	<description>The pipeline operating mode</description>
	<value>automatic</value>
	<allowed kind="enum">
	    <value>automatic</value>
	    <value>interactive</value>
	    <value>getinputs</value>
	</allowed>
    </param>

    <param subparam="true" name="dryrun" type="bool">
	<description>Run task (False) or display the command(True)</description>
	<value type="bool">False</value>
    </param>

    <param subparam="true" name="acceptresults" type="bool">
	<description>Automatically accept results into the context</description>
	<value type="bool">True</value>
    </param>

    <constraints>
        <when param="pipelinemode">
	    <equals value="automatic" type="string"/>
	    <equals value="interactive" type="string">
	        <default param="vis"><value type="stringVec"/></default>
	        <default param="field"><value type="string"/></default>
	        <default param="intent"><value type="string"/></default>
	        <default param="spw"><value type="string"/></default>
		<default param="antenna"><value type="string"/></default>
	        <default param="flagbackup"><value type="bool">True</value></default>
	        <default param="dryrun"><value type="bool">False</value></default>
	        <default param="acceptresults"><value type="bool">True</value></default>
	    </equals>
	    <equals value="getinputs" type="string">
	        <default param="vis"><value type="stringVec"/></default>
	        <default param="field"><value type="string"/></default>
	        <default param="intent"><value type="string"/></default>
	        <default param="spw"><value type="string"/></default>
		<default param="antenna"><value type="string"/></default>
	        <default param="flagbackup"><value type="bool">True</value></default>
	    </equals>
        </when>
        <when param="flagsum">
	    <equals value="True" type="bool">
	        <default param="flagdetailedsum"><value type="bool">True</value></default>
	    </equals>
	    <equals value="False" type="bool">
	    </equals>
        </when>
    </constraints>
</input>


<returns>any</returns>

<example>


Output:

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
    the results object for the pipeline task is returned

Issues

There is some discussion about the appropriate values of calwt. Given
properly scaled data, the correct value should be the CASA default of True.
However at the current time ALMA is suggesting that calwt be set to True for
applying observatory calibrations, e.g. antenna positions, WVR, and system
temperature corrections, and to False for applying instrument calibrations,
e.g. bandpass, gain, and flux.


Examples

1. Run the final applycals stage of the VLA CASA pipeline.

hifv_applycals()


</example>
</task>
</casaxml>
