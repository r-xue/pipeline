<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://casa.nrao.edu/schema/psetTypes.html">

<task category="pipeline" name="hifv_fluxboot2" type="function">
<shortdescription>Fluxboot2</shortdescription>
<description>
</description>
<input>
    <param name="vis" type="stringVec">
        <shortdescription>List of input visibility data</shortdescription>
        <description>List of visibility data files. These may be ASDMs, tar files of ASDMs,
                     MSes, or tar files of MSes, If ASDM files are specified, they will be
                     converted  to MS format.
                     example: vis=['X227.ms', 'asdms.tar.gz']
        </description>
        <value/>
    </param>

    <param subparam="true" name="caltable" type="string">
        <description>String name of the flagged caltable</description>
        <value/>
    </param>

    <param name="fitorder" type="int">
        <shortdescription>Order of spectral fitting (default of -1 for heuristic determination)</shortdescription>
        <description>Polynomial order of the spectral fitting for valid flux densities
                     with multiple spws.  The default value of -1 means that the heuristics determine the fit order based on
                     fractional bandwidth and receiver bands present in the observation.
                     An override value of 0,1,2,3 or 4 may be specified by the user.
                     Spectral index (1) and, if applicable, curvature (2) are reported in the weblog.
                     If no determination can be made by the heuristics, a fitorder of 1 will be used.
        </description>
        <value>-1</value>
    </param>

    <param name="pipelinemode" type="string">
        <shortdescription>The pipeline operating mode</shortdescription>
        <description>The pipeline operating mode. In 'automatic' mode the pipeline
                     determines the values of all context defined pipeline inputs
                     automatically.  In 'interactive' mode the user can set the pipeline
                     context defined parameters manually.  In 'getinputs' mode the user
                     can check the settings of all pipeline parameters without running
                     the task.
        </description>
        <value>automatic</value>
        <allowed kind="enum">
            <value>automatic</value>
            <value>interactive</value>
            <value>getinputs</value>
        </allowed>
    </param>

    <param subparam="true" name="dryrun" type="bool">
        <shortdescription>Run the task (False) or display task command (True)</shortdescription>
        <description>Run the commands (True) or generate the commands to be run but
                     do not execute (False).  This is a pipeline task execution mode.
        </description>
        <value>False</value>
    </param>

    <param subparam="true" name="acceptresults" type="bool">
        <shortdescription>Add the results into the pipeline context</shortdescription>
        <description>Add the results of the task to the pipeline context (True) or
                     reject them (False).  This is a pipeline task execution mode.
        </description>
        <value>True</value>
    </param>

    <param name="refantignore" type="string">
	<description>String list of antennas to ignore
                     Example:  refantignore='ea02,ea03'
        </description>
	<value/>
    </param>

    <constraints>
	<when param="pipelinemode">
	    <equals value="automatic" type="string">
	    </equals>
	    <equals value="interactive" type="string">
        <default param="vis"><value type="stringVec"/></default>
		<default param="dryrun"><value type="bool">False</value></default>
		<default param="acceptresults"><value type="bool">True</value></default>
	    </equals>
	    <equals value="getinputs" type="string">
                <default param="vis"><value type="stringVec"/></default>
	    </equals>
	</when>
    </constraints>

</input>


<returns>any</returns>


<example>
Output:

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
   the results object for the pipeline task is returned.


Examples

1. VLA CASA pipeline flux density bootstrapping.

hifv_fluxboot2()


</example>
</task>
</casaxml>
