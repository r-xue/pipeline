<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd">

<task type="function" name="hifv_flagtargetsdata" category="pipeline">
<shortdescription>Apply a flagtemplate to target data prior to running imaging pipeline tasks</shortdescription>
<description>Apply a flagtemplate to target data prior to running imaging pipeline tasks</description>
<input>
        <param name="vis" subparam="true" type="stringVec">
        <shortdescription>List of input MeasurementSets to flag</shortdescription>
        <description>The list of input MeasurementSets. Defaults to the list
                     of MeasurementSets defined in the pipeline context.
                     (can be set only in 'interactive mode')
        </description>
        <value/>
    </param>

    <param name="template" type="bool">
        <shortdescription>Apply a flagging template</shortdescription>
        <description>Apply flagging templates.
                     (can be set in any pipeline mode)
        </description>
        <value>True</value>
    </param>

    <param name="filetemplate" subparam="true" type="stringVec">
        <shortdescription>File that contains the flagging template</shortdescription>
        <description>The name of a text file that contains the flagging
                     template for issues with the science target data etc.
                     If the template flags files is undefined a name of the
                     form 'msname_flagtargetstemplate.txt' is assumed.
                     (can be set in any pipeline mode)
        </description>
        <value/>
    </param>

    <param name="pipelinemode" type="string">
        <shortdescription>The pipeline operating mode</shortdescription>
        <description>The pipeline operating mode.
                     In 'automatic' mode the pipeline determines the values
                     of all context defined pipeline inputs automatically.
                     In interactive mode the user can set the pipeline
                     context defined parameters manually.
                     In 'getinputs' mode the user can check the settings of
                     all pipeline parameters without running the task.
        </description>
        <value>automatic</value>
        <allowed kind="enum">
            <value>automatic</value>
            <value>interactive</value>
            <value>getinputs</value>
        </allowed>
    </param>

    <param name="flagbackup" subparam="true" type="bool">
        <shortdescription>Backup pre-existing flags before applying new ones</shortdescription>
        <description>Back up any pre-existing flags.
                     (can be set only in 'interactive mode')
        </description>
        <value type="bool">True</value>
    </param>

    <param name="dryrun" subparam="true" type="bool">
        <shortdescription>Run the task (False) or display the command (True)</shortdescription>
        <description>Run the commands (False) or generate the commands to be
                     run but do not execute (True).
        </description>
        <value>False</value>
    </param>

    <param name="acceptresults" subparam="true" type="bool">
        <shortdescription>Add the results into the pipeline context</shortdescription>
        <description>Add the results of the task to the pipeline context (True)
                     or reject them (False).
        </description>
        <value>True</value>
    </param>

    <constraints>
        <when param="pipelinemode">
            <equals type="string" value="automatic">
            </equals>
            <equals type="string" value="interactive">
                <default param="vis"><value type="stringVec"/></default>
                <default param="flagbackup"><value type="bool">False</value></default>
                <default param="dryrun"><value type="bool">False</value></default>
                <default param="acceptresults"><value type="bool">True</value></default>
            </equals>
            <equals type="string" value="getinputs">
                <default param="vis"><value type="stringVec"/></default>
                <default param="flagbackup"><value type="bool">False</value></default>
            </equals>
        </when>

        <when param="template">
            <equals type="bool" value="True">
                <default param="filetemplate"><value type="stringVec"/></default>
            </equals>
            <equals type="bool" value="False">
            </equals>
        </when>

    </constraints>

</input>

<returns type="void"/>


<example>
The hifv_flagtargetsdata task

Keyword arguments:

---- pipeline parameter arguments which can be set in any pipeline mode

vis -- List of visisbility  data files. These may be ASDMs, tar files of ASDMs,
   MSs, or tar files of MSs, If ASDM files are specified, they will be
   converted  to MS format.
   default: []
   example: vis=['X227.ms', 'asdms.tar.gz']



pipelinemode -- The pipeline operating mode. In 'automatic' mode the pipeline
   determines the values of all context defined pipeline inputs
   automatically.  In 'interactive' mode the user can set the pipeline
   context defined parameters manually.  In 'getinputs' mode the user
   can check the settings of all pipeline parameters without running
   the task.
   default: 'automatic'.

---- pipeline context defined parameter argument which can be set only in
'interactive mode'


--- pipeline task execution modes

dryrun -- Run the commands (True) or generate the commands to be run but
   do not execute (False).
   default: True

acceptresults -- Add the results of the task to the pipeline context (True) or
   reject them (False).
   default: True

Output:

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
   the results object for the pipeline task is returned.


Examples

1. Basic flagtargetsdata task

   hifv_flagtargetsdata()


</example>
</task>
</casaxml>
