<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd">

<task category="pipeline" name="hifv_selfcal" type="function">
<shortdescription>Selfcal task executing gaincal and applycal</shortdescription>
<description>Output:
             results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
             the results object for the pipeline task is returned.
</description>
<input>
    <param name="vis" type="stringVec">
        <shortdescription>List of input visibility data</shortdescription>
        <description>List of visibility data files. These may be ASDMs, tar files of ASDMs,
                     MSes, or tar files of MSes, If ASDM files are specified, they will be
                     converted  to MS format.
                     example: vis=['X227.ms', 'asdms.tar.gz']
        </description>
        <value/>
    </param>


    <param name="pipelinemode" type="string">
        <shortdescription>The pipeline operating mode</shortdescription>
        <description>The pipeline operating mode. In 'automatic' mode the pipeline
                     determines the values of all context defined pipeline inputs
                     automatically.  In 'interactive' mode the user can set the pipeline
                     context defined parameters manually.  In 'getinputs' mode the user
                     can check the settings of all pipeline parameters without running
                     the task.
        </description>
        <value>automatic</value>
        <allowed kind="enum">
            <value>automatic</value>
            <value>interactive</value>
            <value>getinputs</value>
        </allowed>
    </param>

    <param name="dryrun" subparam="true" type="bool">
        <shortdescription>Run the task (False) or display task command (True)</shortdescription>
        <description>Run the commands (True) or generate the commands to be run but
                     do not execute (False).  This is a pipeline task execution mode.
        </description>
        <value>False</value>
    </param>

    <param name="acceptresults" subparam="true" type="bool">
        <shortdescription>Add the results into the pipeline context</shortdescription>
        <description>Add the results of the task to the pipeline context (True) or
                     reject them (False).  This is a pipeline task execution mode.
        </description>
        <value>True</value>
    </param>

    <param name="refantignore" type="string">
	<shortdescription>String list of antennas to ignore</shortdescription>
	<description>String list of antennas to ignore</description>
	<value/>
    </param>

    <param name="combine" type="string">
	<shortdescription>Data axes which to combine for solve (obs, scan, spw, and/or field)</shortdescription>
    <description>Data axes which to combine for solve
                 Options: '','obs','scan','spw',field', or any
                 comma-separated combination in a single string

                 Example: combine='scan,spw' - Extend solutions
                 over scan boundaries (up to the solint), and
                 combine spws for solving.

                 In selfcalmode='VLASS-SE' use the default value.
    </description>
	<value>spw,field</value>
    </param>

    <param name="selfcalmode" type="string">
    <shortdescription>Heuristics mode selection</shortdescription>
	<description>Heuristics mode selection. Known modes are 'VLASS' and 'VLASS-SE'.
                 Default value is 'VLASS'.
    </description>
	<value>VLASS</value>
    </param>

    <param name="refantmode" type="string">
	<shortdescription>Reference antenna mode</shortdescription>
	<description>Reference antenna mode</description>
	<value>strict</value>
    </param>

    <param name="overwrite_modelcol" type="bool">
        <shortdescription>Always write the model column, even if it already exists</shortdescription>
        <description>Always write the model column, even if it already exists</description>
        <value>False</value>
    </param>

    <constraints>
	<when param="pipelinemode">
	    <equals type="string" value="automatic">
	    </equals>
	    <equals type="string" value="interactive">
                <default param="vis"><value type="stringVec"/></default>

		<default param="dryrun"><value type="bool">False</value></default>
		<default param="acceptresults"><value type="bool">True</value></default>
	    </equals>
	    <equals type="string" value="getinputs">
                <default param="vis"><value type="stringVec"/></default>

	    </equals>
	</when>
    </constraints>

</input>


<returns>any</returns>


<example>
Examples

1. Basic selfcal task

   hifv_selfcal()

2. VLASS-SE selfcal usage

    hifv_selfcal(selfcalmode='VLASS-SE', combine='field,spw')

</example>
</task>
</casaxml>
