<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd">

<task category="pipeline" name="hifa_restoredata" type="function">

<shortdescription>Restore flagged and calibration interferometry data from a pipeline run</shortdescription>
<description>
The hifa_restoredata task restores flagged and calibrated MeasurementSets
from archived ASDMs and pipeline flagging and calibration date products. 

Output

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
   the results object for the pipeline task is returned.


Description

The hifa_restoredata restores flagged and calibrated data from archived
ASDMs and pipeline flagging and calibration data products. Pending archive
retrieval support hifa_restoredata assumes that the required products
are available in the rawdata_dir in the format produced by the
hifa_exportdata task.

hifa_restoredata assumes that the following entities are available in the raw
data directory.

o the ASDMs to be restored
o for each ASDM in the input list
   o a compressed tar file of the final flagversions file, e.g.  
     uid___A002_X30a93d_X43e.ms.flagversions.tar.gz
   o a text file containing the applycal instructions, e.g.
     uid___A002_X30a93d_X43e.ms.calapply.txt
   o a compressed tar file containing the caltables for the parent session,
     e.g. uid___A001_X74_X29.session_3.caltables.tar.gz

hifa_restoredata performs the following operations:

o imports the ASDM(s))
o removes the default MS.flagversions directory created by the filler
o restores the final MS.flagversions directory stored by the pipeline
o restores the final set of pipeline flags to the MS
o restores the final calibration state of the MS
o restores the final calibration tables for each MS
o applies the calibration tables to each MS


Issues


</description>

<input>
    <param name="vis" type="stringVec">
        <shortdescription>List of input visibility data</shortdescription>
        <description>List of raw visibility data files to be restored. 
                     Assumed to be in the directory specified by rawdata_dir.
                     (can be set only in 'interactive mode')
                     example: vis=['uid___A002_X30a93d_X43e']
        </description>

	<value/>
    </param>

    <param name="session" type="stringVec">
        <shortdescription>List of sessions one per visibility file</shortdescription>
        <description>List of sessions one per visibility file. 
                     (can be set only in 'interactive mode')

                     example: session=['session_3']
        </description>
	<value/>
    </param>

    <param name="products_dir" type="string">
        <shortdescription>The archived pipeline data products directory</shortdescription>
        <description>Name of the data products directory to copy calibration
                     products from. The parameter is effective only when 
                     copytoraw = True.  When copytoraw = False, calibration
                     products in rawdata_dir will be used.
                     (can be set only in 'interactive mode')

                     example: products_dir='myproductspath'
        </description>
	<value>../products</value>
    </param>

    <param name="copytoraw" type="bool">
        <shortdescription>Copy calibration and flagging tables to raw data directory</shortdescription>
        <description>Copy calibration and flagging tables from products_dir to
                     rawdata_dir directory.
                     (can be set only in 'interactive mode')

                     example: copytoraw=False
        </description>
	<value>True</value>
    </param>

    <param name="rawdata_dir" type="string">
        <shortdescription>The rawdata directory</shortdescription>
        <description>Name of the rawdata subdirectory. 
                     (can be set only in 'interactive mode')

                     example: rawdata_dir='myrawdatapath'
        </description>
<value>../rawdata</value>
    </param>

    <param name="lazy" type="bool">
        <shortdescription>Use the lazy filler option</shortdescription>
        <description>Use the lazy filler option.
                     (can be set only in 'interactive mode')

                     example: lazy=True</description>

	<value>False</value>
    </param>

    <param name="bdfflags" type="bool">
        <shortdescription>Set the BDF flags</shortdescription>
        <description>Set the BDF flags.
                     (can be set only in 'interactive mode')

                     example: bdfflags=False
        </description>
    example: bdfflags=False
<value>True</value>
    </param>

    <param name="ocorr_mode" type="string">
        <shortdescription>Correlation import mode</shortdescription>
        <description>Set ocorr_mode.
                     (can be set only in 'interactive mode')

                     example: ocorr_mode='ca'
        </description>
	<value>ca</value>
    </param>

    <param name="asis" type="string">
        <shortdescription>List of tables to import asis</shortdescription>
        <description>Set list of tables to import as is.
                     (can be set only in 'interactive mode')

                     example: asis='Source Receiver'
        </description>

	<value>SBSummary ExecBlock Antenna Station Receiver Source CalAtmosphere CalWVR CalPointing</value>
    </param>

    <param name="pipelinemode" type="string">
        <shortdescription>The pipeline operating mode</shortdescription>
        <description>The pipeline operating mode. In 'automatic' mode 
                     the pipeline determines the values of all context 
                     defined pipeline inputs automatically.
                     (can be set in any pipeline mode)
        </description>
	<value>automatic</value>
	<allowed kind="enum">
	    <value>automatic</value>
	    <value>interactive</value>
	    <value>getinputs</value>
	</allowed>
    </param>

    <param name="dryrun" subparam="true" type="bool">
        <shortdescription>Run the task (False) or display task command (True)</shortdescription>
        <description>Run the commands (False) or generate the commands to be
                      run but do not execute (True).

        </description>
	<value>False</value>
    </param>

    <param name="acceptresults" subparam="true" type="bool">
        <shortdescription>Add the results into the pipeline context</shortdescription>
        <description>Add the results of the task to the pipeline context (True)
                     or reject them (False).
        </description>
	<value>True</value>
    </param>

    <constraints>
	<when param="pipelinemode">
	    <equals type="string" value="automatic">
	    </equals>
	    <equals type="string" value="interactive">
		<default param="dryrun"><value type="bool">False</value></default>
		<default param="acceptresults"><value type="bool">True</value></default>
	    </equals>
	    <equals type="string" value="getinputs">
	    </equals>
	</when>
    </constraints>

</input>


<returns>any</returns>

<example>
1. Restore the pipeline results for a single ASDM in a single session:

    hifa_restoredata(vis=['uid___A002_X30a93d_X43e'], session=['session_1'],
                     ocorr_mode='ca')
</example>
</task>
</casaxml>
