<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://casa.nrao.edu/schema/psetTypes.html">

<task category="pipeline" name="hifa_gfluxscale" type="function">

<shortdescription>Derive flux density scales from standard calibrators</shortdescription>
<description>
Derive flux densities for point source transfer calibrators using flux models
for reference calibrators.

Flux values are determined by:

o computing complex gain phase only solutions for all the science spectral
  windows using the calibrator data selected by the 'reference' and
  'refintent' parameters and the 'transfer' and 'transintent' parameters,
  and the value of the 'phaseupsolint' parameter.

o computing complex amplitude only solutions for all the science spectral
  windows using calibrator data selected with 'reference' and 'refintent'
  parameters and the 'transfer' and 'transintent' parameters, the value
  of the 'solint' parameter.

o transferring the flux scale from the reference calibrators to the transfer
  calibrators using refspwmap for windows without data in the reference
  calibrators

o extracted the computed flux values from the CASA logs and inserting
  them into the MODEL_DATA column.

Resolved calibrators are handled via antenna selection either automatically,
hm_resolvedcals='automatic' or manually, hm_resolvedcals='manual'. In
the former case antennas closer to the reference antenna than the uv
distance where visibilities fall to 'peak_fraction' of the peak are used.
In manual mode the antennas specified in 'antenna' are used.

Note that the flux corrected calibration table computed internally is
not currently used in later pipeline apply calibration steps.


Issues

Should we add a spw window selection option here?

The code which extracts the flux scales from the logs needs to be replaced
with code which uses the values returned from the CASA fluxscale task.
</description>

<input>
    <param subparam="true" name="vis" type="string">
        <shortdescription>List of input MeasurementSets</shortdescription>
        <description>The list of input MeasurementSets. Defaults to the list of MeasurementSets
            specified in the pipeline context

            example: ['M32A.ms', 'M32B.ms']
        </description>
        <value/>
    </param>

    <param subparam="true" name="reference" type="variant">
        <shortdescription>Reference calibrator field name(s)</shortdescription>
        <description>A string containing a comma delimited list of field names
            defining the reference calibrators. Defaults to field names with
            intent '*AMP*'.

            example: reference='M82,3C273'
        </description>
        <value type="string"/>
    </param>

    <param subparam="true" name="transfer" type="variant">
        <shortdescription>Transfer calibrator field name(s)</shortdescription>
        <description>A string containing a comma delimited list of field names
            defining the transfer calibrators. Defaults to field names with
            intent '*PHASE*'.

            example: transfer='J1328+041,J1206+30'
        </description>
        <value type="string"/>
    </param>

    <param subparam="true" name="refintent" type="string">
        <shortdescription>Observing intent of reference fields</shortdescription>
        <description>A string containing a comma delimited list of intents
            used to select the reference calibrators. Defaults to 'AMPLITUDE'.

            example: refintent='', refintent='AMPLITUDE'
        </description>
        <value/>
    </param>

    <param subparam="true" name="transintent" type="string">
        <shortdescription>Observing intent of transfer fields</shortdescription>
        <description>A string containing a comma delimited list of intents
            defining the transfer calibrators. Defaults to 'PHASE,BANDPASS,CHECK,POLARIZATION'.

            example: transintent='', transintent='PHASE,BANDPASS'
        </description>
        <value/>
    </param>

    <param subparam="true" name="refspwmap" type="intVec">
        <shortdescription>Map across spectral window boundaries</shortdescription>
        <description>Vector of spectral window ids enabling scaling across
            spectral windows. Defaults to no scaling.

            example: refspwmap=[1,1,3,3] - (4 spws, reference fields in 1 and 3, transfer
                             fields in 0,1,2,3
        </description>
        <value/>
    </param>

    <param subparam="true" name="reffile" type="string">
        <shortdescription>Path to file with fluxes for non-solar system calibrators</shortdescription>
        <description>Path to a file containing flux densities for calibrators unknown to
            CASA. Values given in this file take precedence over the CASA-derived
            values for all calibrators except solar system calibrators. By default the
            path is set to the CSV file created by hifa_importdata, consisting of
            catalogue fluxes extracted from the ASDM and / or edited by the user.

            example: reffile='', reffile='working/flux.csv'
        </description>
        <value/>
    </param>

    <param name="phaseupsolint" type="any">
        <shortdescription>Phaseup correction solution interval</shortdescription>
        <description>Time solution intervals in CASA syntax for the phase solution.

            example: phaseupsolint='inf', phaseupsolint='int', phaseupsolint='100sec'
        </description>
        <any type="variant"/>
        <value type="string">int</value>
    </param>

    <param name="solint" type="any">
        <shortdescription>Amplitude correction solution interval</shortdescription>
        <description>Time solution intervals in CASA syntax for the amplitude solution.

            example: solint='inf', solint='int', solint='100sec'
        </description>
        <any type="variant"/>
        <value type="string">inf</value>
    </param>

    <param name="minsnr" type="double">
        <shortdescription>Minimum SNR for gain solutions</shortdescription>
        <description>Minimum signal to noise ratio for gain calibration solutions.

            example: minsnr=1.5, minsnr=0.0
        </description>
        <value>2.0</value>
    </param>

    <param subparam="true" name="refant" type="string">
        <shortdescription>The name or ID of the reference antenna</shortdescription>
        <description>A string specifying the reference antenna(s). By default this is read
            from the context.

            example: refant='DV05'
        </description>
        <value/>
    </param>

    <param name="hm_resolvedcals" type="string">
        <shortdescription>The resolved calibrators heuristics method</shortdescription>
        <description>Heuristics method for handling resolved calibrators. The
            options are 'automatic' and 'manual'. In automatic mode antennas closer
            to the reference antenna than the uv distance where visibilities fall to
            'peak_fraction' of the peak are used. In manual mode the antennas specified
            in 'antenna' are used.
        </description>
        <value>automatic</value>
        <allowed kind="enum">
            <value>automatic</value>
            <value>manual</value>
        </allowed>
    </param>

    <param subparam="true" name="antenna" type="string">
        <shortdescription>Antennas to be used in fluxscale</shortdescription>
        <description>A comma delimited string specifying the antenna names or ids to be
            used for the fluxscale determination. Used in hm_resolvedcals='manual' mode.

            example: antenna='DV16,DV07,DA12,DA08'
        </description>
        <value/>
    </param>

    <param subparam="true" name="peak_fraction" type="double">
        <shortdescription>Fraction of peak visibility at uv-distance limit of antennas to be used</shortdescription>
        <description>The limiting UV distance from the reference antenna for antennas
            to be included in the flux calibration. Defined as the point where the
            calibrator visibilities have fallen to 'peak_fraction' of the peak value.
        </description>
        <value>0.2</value>
    </param>

    <param name="pipelinemode" type="string">
        <shortdescription>The pipeline operating mode</shortdescription>
        <description>The pipeline operating mode. In 'automatic' mode the pipeline
            determines the values of all context defined pipeline inputs automatically.
            In interactive mode the user can set the pipeline context defined
            parameters manually. In 'getinputs' mode the users can check the settings
            of all pipeline parameters without running the task.
        </description>
        <value>automatic</value>
        <allowed kind="enum">
            <value>automatic</value>
            <value>interactive</value>
            <value>getinputs</value>
        </allowed>
    </param>

    <param subparam="true" name="dryrun" type="bool">
        <shortdescription>Run the task (False) or display commands (True)</shortdescription>
        <description>Run the commands (True) or generate the commands to be run but do not
            execute (False).
        </description>
        <value>False</value>
    </param>

    <param subparam="true" name="acceptresults" type="bool">
        <shortdescription>Automatically accept results into context</shortdescription>
        <description>Add the results of the task to the pipeline context (True) or
            reject them (False).
        </description>
        <value>True</value>
    </param>

    <constraints>
        <when param="pipelinemode">
            <equals value="automatic" type="string"/>
            <equals value="interactive" type="string">
                <default param="vis"><value type="stringVec"/></default>
                <default param="reference"><value type="string"/></default>
                <default param="transfer"><value type="string"/></default>
                <default param="refintent"><value type="string"/></default>
                <default param="transintent"><value type="string"/></default>
                <default param="refspwmap"><value type="intVec"/></default>
                <default param="reffile"><value type="string"/></default>
                <default param="refant"><value type="string"/></default>
                <default param="hm_resolvedcals"><value type="string">automatic</value></default>
                <default param="dryrun"><value type="bool">False</value></default>
                <default param="acceptresults"><value type="bool">True</value></default>
            </equals>
            <equals value="getinputs" type="string">
                <default param="vis"><value type="stringVec"/></default>
                <default param="reference"><value type="string"/></default>
                <default param="transfer"><value type="string"/></default>
                <default param="refintent"><value type="string"/></default>
                <default param="transintent"><value type="string"/></default>
                <default param="refspwmap"><value type="intVec"/></default>
                <default param="reffile"><value type="string"/></default>
                <default param="refant"><value type="string"/></default>
                <default param="hm_resolvedcals"><value type="string">automatic</value></default>
            </equals>
        </when>

        <when param="hm_resolvedcals">
            <equals value="automatic" type="string">
                <default param="peak_fraction"><value type="double">0.2</value></default>
            </equals>
            <equals value="manual" type="string">
                <default param="antenna"><value type="string"/></default>
            </equals>
        </when>

    </constraints>

</input>


<returns>any</returns>

<example>
1. Compute flux values for the phase calibrator using model data from
the amplitude calibrator:

    hifa_gfluxscale()
</example>
</task>
</casaxml>
