<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://casa.nrao.edu/schema/psetTypes.html">

<task category="pipeline" name="hifa_fluxcalflag" type="function">

<shortdescription>Locate and flag line regions in solar system flux calibrators</shortdescription>
<description>
Locate and flag line regions in solar system flux calibrators.
</description>

<input>
    <param subparam="true" name="vis" type="stringVec">
	<description>List of input MeasurementSets</description>
	<value/>
    </param>

    <param subparam="true" name="field" type="string">
	<description>List of field names or ids</description>
        <value type="string"/>
    </param>

    <param subparam="true" name="intent" type="string">
    	<description>Observing intent of flux calibrators</description>
        <value/>
    </param>

    <param subparam="true" name="spw" type="string">
	<description>List of spectral window ids</description>
	<value/>
    </param>

    <param name="pipelinemode" type="string">
	<description>The pipeline operating mode</description>
	<value>automatic</value>
	<allowed kind="enum">
	    <value>automatic</value>
	    <value>interactive</value>
	    <value>getinputs</value>
	</allowed>
   </param>

    <param name="threshold" type="double">
        <description>Threshold for flagging the entire spw</description>
        <value type="double">0.75</value>
    </param>

    <param subparam="true" name="appendlines" type="bool">
        <description>Append user defined line regions to the line dictionary</description>
        <value type="bool">False</value>
    </param>

    <param subparam="true" name="linesfile" type="string">
        <description>File containing user defined lines</description>
        <value type="string"/>
    </param>

    <param subparam="true" name="applyflags" type="bool">
        <description>Apply the computed flag commands</description>
        <value type="bool">True</value>
    </param>

    <param subparam="true" name="dryrun" type="bool">
	<description>Run the task (False) or display the commands (True)</description>
	<value type="bool">False</value>
    </param>

    <param subparam="true" name="acceptresults" type="bool">
	<description>Automatically accept results into the context</description>
	<value type="bool">True</value>
    </param>

    <constraints>

	<when param="pipelinemode">
	    <equals value="automatic" type="string"/>
	    <equals value="interactive" type="string">
		<default param="vis"><value type="stringVec"/></default>
		<default param="field"><value type="string"/></default>
		<default param="intent"><value type="string"/></default>
		<default param="spw"><value type="string"/></default>
		<default param="appendlines"><value type="bool">False</value></default>
		<default param="linesfile"><value type="string"/></default>
		<default param="applyflags"><value type="bool">True</value></default>
		<default param="dryrun"><value type="bool">False</value></default>
		<default param="acceptresults"><value type="bool">True</value></default>
	    </equals>
	    <equals value="getinputs" type="string">
		<default param="vis"><value type="stringVec"/></default>
		<default param="field"><value type="string"/></default>
		<default param="intent"><value type="string"/></default>
		<default param="spw"><value type="string"/></default>
		<default param="appendlines"><value type="bool">False</value></default>
		<default param="linesfile"><value type="string"/></default>
		<default param="applyflags"><value type="bool">True</value></default>
	    </equals>
	</when>

   </constraints>

</input>


<returns>any</returns>

<example>
Fills the model column with the model visibilities.


Keyword arguments

pipelinemode -- The pipeline operating mode. In 'automatic' mode the pipeline
    determines the values of all context defined pipeline inputs automatically.
    In interactive mode the user can set the pipeline context defined
    parameters manually. In 'getinputs' mode the user can check the settings of
    all pipeline parameters without running the task.

    default: 'automatic'.

---- pipeline parameter arguments which can be set in any pipeline mode

threshold -- If the fraction of an spw occupied by line regions is greater
   then threshold flag the entire spectral window.

---- pipeline context defined parameter arguments which can be set only in
'interactive mode'

vis -- The list of input MeasurementSets. Defaults to the list of
    MeasurementSets defined in the pipeline context.

    default: []

field -- The list of field names or field ids for which the models are
    to be set. Defaults to all fields with intent 'AMPLITUDE'.

    default: ''
    example: field='3C279', field='3C279, M82'

intent -- A string containing a comma delimited list of intents against
    which the selected fields are matched. Defaults to all data
    with amplitude intent.

    default: ''
    example: intent='AMPLITUDE'

spw -- The list of spectral windows and channels for which bandpasses are
    computed. Defaults to all science spectral windows.

    default: ''
    example: spw='11,13,15,17'

--- pipeline task execution modes

dryrun -- Run the commands (True) or generate the commands to be run but
    do not execute (False).

    default: True

acceptresults -- Add the results of the task to the pipeline context (True) or
    reject them (False).

    default: True


Output

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
    the results object for the pipeline task is returned.


Description

Search the built-in solar system flux calibrator line catalog for overlaps with
the science spectral windows. Generate a list of line overlap regions and
flagging commands.


Issues


Examples

1. Locate known lines in any solar system object flux calibrators:

    hifa_fluxcalflag()
</example>
</task>
</casaxml>
