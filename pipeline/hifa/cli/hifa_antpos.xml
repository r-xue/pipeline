<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd">

<task category="pipeline" name="hifa_antpos" type="function">

<shortdescription>Derive an antenna position calibration table</shortdescription>

<description>
The hifa_antpos task corrects the antenna positions recorded in the ASDMs using
updated antenna position calibration information determined after the
observation was taken.

Corrections can be input by hand, read from a file on disk, or in the future
by querying an ALMA database service.

The antenna positions file is in 'csv' format containing 6 comma-delimited
columns as shown below. The default name of this file is 'antennapos.csv'.

Contents of example 'antennapos.csv' file:

  ms,antenna,xoffset,yoffset,zoffset,comment
  uid___A002_X30a93d_X43e.ms,DV11,0.000,0.010,0.000,&quot;No comment&quot;
  uid___A002_X30a93d_X43e.dup.ms,DV11,0.000,-0.010,0.000,&quot;No comment&quot;

The corrections are used to generate a calibration table which is recorded
in the pipeline context and applied to the raw visibility data, on the fly to
generate other calibration tables, or permanently to generate calibrated
visibilities for imaging.

If pipeline mode is 'getinputs' then None is returned. Otherwise
the results object for the pipeline task is returned.

Note: the hm_antpos 'online' option will be implemented when the observing system
provides an antenna position determination service.
</description>

<input>
    <param name="vis" subparam="true" type="stringVec">
        <shortdescription>List of input MeasurementSets</shortdescription>
        <description>List of input MeasurementSets. Defaults to the list of
            MeasurementSets specified in the pipeline context.

            Example: vis=['ngc5921.ms']
        </description>
        <value/>
    </param>

    <param name="caltable" subparam="true" type="stringVec">
        <shortdescription>List of output caltable(s)</shortdescription>
        <description>List of names for the output calibration tables. Defaults
            to the standard pipeline naming convention.

            Example: caltable=['ngc5921.gcal']
        </description>
        <value/>
    </param>

    <param name="hm_antpos" type="string">
        <shortdescription>The antenna position determination method</shortdescription>
        <description>Heuristics method for retrieving the antenna position
            corrections. The options are 'online' (not yet implemented), 'manual',
            and 'file'.

            Example: hm_antpos='manual'
        </description>
        <value>file</value>
        <allowed kind="enum">
            <value>file</value>
            <value>manual</value>
            <value>online</value>
        </allowed>
    </param>

    <param name="antenna" subparam="true" type="string">
        <shortdescription>List of antennas to be corrected</shortdescription>
        <description>The list of antennas for which the positions are to be corrected
            if hm_antpos is 'manual'.

            Example: antenna='DV05,DV07'
        </description>
        <value/>
    </param>

    <param name="offsets" subparam="true" type="doubleVec">
        <shortdescription>List of position corrections one set per antenna</shortdescription>
        <description>The list of antenna offsets for each antenna in 'antennas'. Each
            offset is a set of 3 floating point numbers separated by commas, specified
            in the ITRF frame.

            Example: offsets=[0.01, 0.02, 0.03, 0.03, 0.02, 0.01]
        </description>
        <value/>
    </param>

    <param name="antposfile" subparam="true" type="string">
        <shortdescription>File containing antenna position corrections</shortdescription>
        <description>The file(s) containing the antenna offsets. Used if hm_antpos
            is 'file'.
        </description>
        <value>antennapos.csv</value>
    </param>

    <param name="pipelinemode" type="string">
        <shortdescription>The pipeline operation mode</shortdescription>
        <description>The pipeline operating mode. In 'automatic' mode the pipeline
            determines the values of all context defined pipeline inputs automatically.
            In interactive mode the user can set the pipeline context defined parameters
            manually. In 'getinputs' mode the user can check the settings of
            all pipeline parameters without running the task.
        </description>
        <value>automatic</value>
        <allowed kind="enum">
            <value>automatic</value>
            <value>interactive</value>
            <value>getinputs</value>
        </allowed>
    </param>

    <param name="dryrun" subparam="true" type="bool">
        <shortdescription>Run the task (False) or list commands (True)</shortdescription>
        <description>Run the commands (True) or generate the commands to be run but
            do not execute (False).
        </description>
       <value>False</value>
    </param>

    <param name="acceptresults" subparam="true" type="bool">
        <shortdescription>Automatically accept results into context</shortdescription>
        <description>Automatically accept the results of the task into the pipeline context (True)
            or reject them (False).
        </description>
        <value>True</value>
    </param>

    <constraints>
        <when param="hm_antpos">
            <equals type="string" value="file">
                <default param="antposfile"><value type="string"/></default>
            </equals>
            <equals type="string" value="manual">
                <default param="antenna"><value type="string"/></default>
                <default param="offsets"><value type="string"/></default>
            </equals>
            <equals type="string" value="online">
            </equals>
        </when>

        <when param="pipelinemode">
            <equals type="string" value="automatic"/>
            <equals type="string" value="interactive">
                <default param="vis"><value type="stringVec"/></default>
                <default param="caltable"><value type="stringVec"/></default>
                <default param="dryrun"><value type="bool">False</value></default>
                <default param="acceptresults"><value type="bool">True</value></default>
            </equals>
            <equals type="string" value="getinputs">
                <default param="vis"><value type="stringVec"/></default>
                <default param="caltable"><value type="stringVec"/></default>
            </equals>
        </when>
    </constraints>
</input>

<returns>any</returns>

<example>
1. Correct the position of antenna 5 for all the visibility files in a single
pipeline run:

    hifa_antpos(antenna='DV05', offsets=[0.01, 0.02, 0.03])

2. Correct the position of antennas for all the visibility files in a single
pipeline run using antenna positions files on disk. These files are assumed
to conform to a default naming scheme if 'antposfile' is unspecified by the
user:

    hifa_antpos(hm_antpos='file', antposfile='myantposfile.csv')
</example>
</task>
</casaxml>
