<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://casa.nrao.edu/schema/psetTypes.html">

<task category="pipeline" name="hifas_imageprecheck" type="function">

<shortdescription>Calculates the best robust value and Briggs weighting parameter to achieve sensitivity and angular resolution goals.</shortdescription>
<description>
In this task, the representative source and the spw containing the
representative frequency selected by the PI in the OT are used to calculate
the synthesized beam and to make sensitivity estimates for the aggregate
bandwidth and representative bandwidth for several values of the robust parameter.
This information is reported in a table in the weblog. If no representative
target/frequency information is available, it defaults to the first target
and center of first spw in the data (i.e. pre-Cycle 5 data does not have
this information available). The best Briggs weighting parameter to achieve
the PI's desired angular resolution is chosen automatically.
See the User's guide for further details.

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
           the results object for the pipeline task is returned.
</description>

<input>
  <param subparam="true" name="vis" type="stringVec">
    <shortdescription>List of input MeasurementSets</shortdescription>
    <description>The list of input MeasurementSets. Defaults to the list of
                 MeasurementSets specified in the h_init or hif_importdata task.
                 '': use all MeasurementSets in the context

                 Examples: 'ngc5921.ms', ['ngc5921a.ms', ngc5921b.ms', 'ngc5921c.ms']
    </description>
    <value/>
  </param>

  <param name="desired_angular_resolution" type="string">
     <shortdescription>User specified angular resolution goal</shortdescription>
     <description>User specified angular resolution goal string.
                  '': automatic from performance parameters (default)

                  Example: '1.0arcsec'
     </description>
     <value>''</value>
  </param>

  <param name="calcsb" type="bool">
    <description>Force (re-)calculation of sensitivities and beams</description>
    <value>False</value>
  </param>

  <param name="parallel" type="string">
    <description>Use MPI cluster where possible</description>
    <value>automatic</value>
    <allowed kind="enum">
      <value>automatic</value>
      <value>true</value>
      <value>false</value>
    </allowed>
  </param>

  <param name="pipelinemode" type="string">
    <shortdescription>The pipeline operating mode</shortdescription>
    <description>The pipeline operating mode.
                 In 'automatic' mode the pipeline determines the values of all
                 context defined pipeline inputs automatically.
                 In 'interactive' mode the user can set the pipeline context
                 defined parameters manually.
                 In 'getinputs' mode the user can check the settings of all
                 pipeline parameters without running the task.
    </description>
    <value>automatic</value>
    <allowed kind="enum">
      <value>automatic</value>
      <value>interactive</value>
      <value>getinputs</value>
    </allowed>
  </param>

  <param subparam="true" name="dryrun" type="bool">
    <description>Run the task (False) or just display the command (True)</description>
    <value>False</value>
  </param>

  <param subparam="true" name="acceptresults" type="bool">
    <shortdescription>Add the results into the pipeline context</shortdescription>
    <description>Add the results of the task to the pipeline context (True) or
                 reject them (False).
    </description>
    <value>True</value>
  </param>

  <constraints>
    <when param="pipelinemode">
      <equals value="automatic" type="string">
      </equals>
      <equals value="interactive" type="string">
        <default param="vis"><value type="stringVec"/></default>
        <default param="dryrun"><value type="bool">False</value></default>
        <default param="acceptresults"><value type="bool">True</value></default>
      </equals>
      <equals value="getinputs" type="string">
        <default param="vis"><value type="stringVec"/></default>

      </equals>
    </when>
  </constraints>
</input>


<returns>any</returns>

<example>
</example>
</task>
</casaxml>
