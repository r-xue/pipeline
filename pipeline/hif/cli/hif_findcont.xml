<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd">

<task category="pipeline" name="hif_findcont" type="function">
<shortdescription>Find continuum frequency ranges</shortdescription>
<description>
Find continuum frequency ranges for a list of specified targets.  

If the cont.dat file is not already present in the working directory, then dirty image
cubes are created for each spectral window of each science target at the native channel
resolution unless the nbins parameter was used in the preceding hif_makeimlist stage.
Robust=1 Briggs weighting is used for optimal line sensitivity, even if a different
robust had been chosen in hifa_imageprecheck to match the PI requested angular resolution.
Using moment0 and moment8 images of each cube, SNR-based masks are created, and the mean
spectrum of the joint mask is computed and evaluated with extensive heuristics to find the
channel ranges that are likely to be free of line emission.  Warnings are generated if
the channel ranges contain a small fraction of the bandwidth, or sample only a limited
extent of the spectrum.

If the cont.dat file already exists in the working directory before this task is executed,
then it will first examine the contents. For any spw that already has frequency ranges
defined in this file, it will not perform the analysis described above in favor of the
a priori ranges. For spws not listed in a pre-existing file, it will analyze them as
normal and update the file. In either case, the cont.dat file is used by the subsequent
hif_uvcontfit and hif_makeimages stages.

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
           the results object for the pipeline task is returned.
</description>
<input>

  <param name="vis" subparam="true" type="stringVec">
    <shortdescription>List of input MeasurementSets</shortdescription>
    <description>The list of input MeasurementSets. Defaults to the list of
                 MeasurementSets specified in the h_init or hif_importdata task.
                 \'\': use all MeasurementSets in the context

                 Examples: 'ngc5921.ms', ['ngc5921a.ms', ngc5921b.ms', 'ngc5921c.ms']
    </description>
    <value/>
  </param>

  <param name="target_list" subparam="true" type="any">
    <any type="variant"/>
    <shortdescription>Dictionary specifying targets to be imaged; blank will read list from context</shortdescription>
    <description>Dictionary specifying targets to be imaged; blank will read list from context</description>
    <value>{}</value>
  </param>

  <param name="hm_mosweight" type="any">
    <shortdescription>Mosaic weighting</shortdescription>
    <description>Mosaic weighting

                 Defaults to '' to enable the automatic heuristics calculation.
                 Can be set to True or False manually.
    </description>
    <any type="variant"/>
    <value type="string"/>
  </param>

  <param name="hm_perchanweightdensity" type="any">
    <shortdescription>Calculate the weight density for each channel independently</shortdescription>
    <description>Calculate the weight density for each channel independently

                 Defaults to '' to enable the automatic heuristics calculation.
                 Can be set to True or False manually.
    </description>
    <any type="variant"/>
    <value type="string"/>
  </param>

  <param name="hm_weighting" type="any">
    <shortdescription>Weighting scheme (natural,uniform,briggs,briggsabs[experimental],briggsbwtaper[experimental])</shortdescription>
    <description>Weighting scheme (natural,uniform,briggs,briggsabs[experimental],briggsbwtaper[experimental])</description>
    <any type="variant"/>
    <value type="string"/>
  </param>

  <param name="datacolumn" type="string">
    <shortdescription>Data column to image</shortdescription>
    <description>Data column to image. Only to be used for manual overriding
                 when the automatic choice by data type is not appropriate.
    </description>
    <value/>
  </param>

  <param name="parallel" type="string">
    <shortdescription>Use MPI cluster where possible</shortdescription>
    <description>Use MPI cluster where possible</description>
    <value>automatic</value>
    <allowed kind="enum">
      <value>automatic</value>
      <value>true</value>
      <value>false</value>
    </allowed>
  </param>

  <param name="pipelinemode" type="string">
    <shortdescription>The pipeline operating mode</shortdescription>
    <description>The pipeline operating mode.
                 In 'automatic' mode the pipeline determines the values of all
                 context defined pipeline inputs automatically.
                 In 'interactive' mode the user can set the pipeline context
                 defined parameters manually.
                 In 'getinputs' mode the user can check the settings of all
                 pipeline parameters without running the task.
    </description>
    <value>automatic</value>
    <allowed kind="enum">
      <value>automatic</value>
      <value>interactive</value>
      <value>getinputs</value>
    </allowed>
  </param>

  <param name="dryrun" subparam="true" type="bool">
    <shortdescription>Run the task (False) or just display the command (True)</shortdescription>
    <description>Run the task (False) or just display the command (True)</description>
    <value>False</value>
  </param>

  <param name="acceptresults" subparam="true" type="bool">
    <shortdescription>Add the results to the pipeline context</shortdescription>
    <description>Add the results of the task to the pipeline context (True) or
                 reject them (False).
    </description>
   <value>True</value>
  </param>


  <constraints>

    <when param="pipelinemode">
      <equals type="string" value="automatic"/>
      <equals type="string" value="interactive">
        <default param="vis"><value type="stringVec"/></default>
        <default param="target_list"><value>{}</value></default>
        <default param="dryrun"><value type="bool">False</value></default>
        <default param="acceptresults"><value type="bool">True</value></default>
      </equals>
      <equals type="string" value="getinputs">
        <default param="vis"><value type="stringVec"/></default>
        <default param="target_list"><value>{}</value></default>
      </equals>
    </when>

  </constraints>

</input>


<returns>any</returns>


<example>
</example>

</task>
</casaxml>
