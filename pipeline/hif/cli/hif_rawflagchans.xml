<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://casa.nrao.edu/schema/psetTypes.html">

<task category="pipeline" name="hif_rawflagchans" type="function">

<shortdescription>Flag deviant baseline/channels in raw data</shortdescription>
<description>
Flag deviant baseline/channels in raw data.
</description>

<input>
    <param subparam="true" name="vis" type="stringVec">
        <description>List of input MeasurementSets</description>
        <value/>
    </param>

    <param subparam="true" name="spw" type="string">
        <description>Set of data selection spectral windows, \'\' for all</description>
        <value/>
    </param>

    <param subparam="true" name="intent" type="string">
        <description>Data intent to use in creating flagging view</description>
        <value/>
    </param>

    <param name="flag_hilo" type="bool">
        <description>True to flag outlier baseline/channels</description>
        <value>True</value>
    </param>

    <param subparam="true" name="fhl_limit" type="double">
        <description>Flag baseline/channels further from median than limit * MAD</description>
        <value>20.0</value>
    </param>

    <param subparam="true" name="fhl_minsample" type="double">
        <description>Minimum number of points in sample</description>
        <value>5</value>
    </param>

    <param name="flag_bad_quadrant" type="bool">
        <description>True to flag bad quadrants in antennas</description>
        <value>True</value>
    </param>

    <param subparam="true" name="fbq_hilo_limit" type="double">
        <description>Note as \'suspect\' baseline/channels further from median than limit * MAD</description>
        <value>8.0</value>
    </param>

    <param subparam="true" name="fbq_antenna_frac_limit" type="double">
        <description>Flag antenna quadrant if its fraction of \'suspect\' baseline/channels &gt; limit</description>
        <value>0.2</value>
    </param>

    <param subparam="true" name="fbq_baseline_frac_limit" type="double">
        <description>Flag baseline quadrant if its fraction of \'suspect\' baseline/channels &gt; limit</description>
        <value>1.0</value>
    </param>

    <param name="pipelinemode" type="string">
        <description>The pipeline operations mode</description>
        <value>automatic</value>
        <allowed kind="enum">
            <value>automatic</value>
            <value>interactive</value>
            <value>getinputs</value>
        </allowed>
    </param>

    <param subparam="true" name="dryrun" type="bool">
        <description>Run the task (False) or list commands (True)</description>
       <value>False</value>
    </param>

    <param subparam="true" name="acceptresults" type="bool">
        <description>Automatically apply results to context</description>
        <value>True</value>
    </param>

    <constraints>
        <when param="pipelinemode">
            <equals value="automatic" type="string"/>
            <equals value="interactive" type="string">
                <default param="vis"><value type="stringVec"/></default>
                <default param="intent"><value type="string"/></default>
                <default param="spw"><value type="string"/></default>
                <default param="dryrun"><value type="bool">False</value></default>
                <default param="acceptresults"><value type="bool">True</value></default>
            </equals>
            <equals value="getinputs" type="string">
                <default param="vis"><value type="stringVec"/></default>
                <default param="intent"><value type="string"/></default>
                <default param="spw"><value type="string"/></default>
            </equals>
        </when>

        <when param="flag_hilo">
            <equals value="True" type="bool">
                <default param="fhl_limit"><value>20.0</value></default>
                <default param="fhl_minsample"><value>5</value></default>
            </equals>
            <equals value="False" type="bool">
            </equals>
        </when>

        <when param="flag_bad_quadrant">
            <equals value="True" type="bool">
                <default param="fbq_hilo_limit"><value>8.0</value></default>
                <default param="fbq_antenna_frac_limit"><value>0.2</value></default>
                <default param="fbq_baseline_frac_limit"><value>1.0</value></default>
            </equals>
            <equals value="False" type="bool">
            </equals>
        </when>

    </constraints>
</input>


<returns>any</returns>

<example>
hif_rawflagchans flags deviant baseline/channels in the raw data.

The flagging views used are derived from the raw data for the specified 
intent - default is BANDPASS. 

Bad baseline/channels are flagged for all intents, not just the
one that is the basis of the flagging views.

For each spectral window the flagging view is a 2d image with axes 
'channel' and 'baseline'. The pixel for each channel, baseline is the
time average of the underlying unflagged raw data.

The baseline axis is labeled by numbers of form id1.id2 where id1 and id2
are the IDs of the baseline antennas. Both id1 and id2 run over all 
antenna IDs in the observation. This means that each baseline is shown 
twice but has the benefit that 'bad' antennas are easily identified by 
eye.

Three flagging methods are available:

If parameter flag_hilo is set True then outliers from the median
of each flagging view will be flagged.

If parameter flag_bad_quadrant is set True then a simple 2 part 
test is used to check for bad antenna quadrants and/or bad baseline 
quadrants. Here a 'quadrant' is defined simply as one quarter of the
channel axis. The first part of the test is to note as 'suspect' those
points further from the view median than fbq_hilo_limit * MAD.
The second part is to flag entire antenna/quadrants if their
fraction of suspect points exceeds fbq_antenna_frac_limit. 
Failing that, entire baseline/quadrants may be flagged if their 
fraction of suspect points exceeds fbq_baseline_frac_limit. 
Suspect points are not flagged unless as part of a bad antenna or 
baseline quadrant. 


Keyword arguments

pipelinemode -- The pipeline operating mode. In 'automatic' mode the pipeline
    determines the values of all context defined pipeline inputs automatically.
    In interactive mode the user can set the pipeline context defined
    parameters manually. In 'getinputs' mode the user can check the settings of
    all pipeline parameters without running the task.

    default: 'automatic'.

---- pipeline parameter arguments which can be set in any pipeline mode

flag_hilo -- True to flag channel/baseline data further from the view
    median than fhl_limit * MAD.

    default: True

fhl_limit -- If flag_hilo is True then flag channel/baseline data
    further from the view median than fhl_limit * MAD.

    default: 20

fhl_minsample -- Do no flagging if the view median and MAD are derived
    from fewer than fhl_minsample view pixels.

    default: 5

flag_bad_quadrant -- True to search for and flag bad antenna quadrants
    and baseline quadrants. Here a /'quadrant/' is one
    quarter of the channel axis.

    default: True

fbq_hilo_limit -- If flag_bad_quadrant is True then channel/baselines further
    from the view median than fbq_hilo_limit * MAD will be noted as
    'suspect'. If there are enough of them to indicate that an antenna or
    baseline quadrant is bad then all channel/baselines in that quadrant will
    be flagged.

    default: 8.0

fbq_antenna_frac_limit -- If flag_bad_quadrant is True and the fraction of
    suspect channel/baselines in a particular antenna/quadrant exceeds
    fbq_antenna_frac_limit then all data for that antenna/quadrant will
    be flagged.

    default: 0.2

fbq_baseline_frac_limit -- If flag_bad_quadrant is True and the fraction of
    suspect channel/baselines in a particular baseline/quadrant exceeds
    fbq_baseline_frac_limit then all data for that baseline/quadrant will
    be flagged.

    default: 1.0 (i.e. no flagging)

---- pipeline context defined parameter arguments which can be set only in
'interactive mode'

vis -- List of input MeasurementSets.

    default: [] - Use the MeasurementSets currently known to the pipeline
    context. 

intent -- A string containing the list of intents to be checked for antennas
    with deviant gains. The default is blank, which causes the task to select
    the 'BANDPASS' intent.

    default: ''
    example: intent='*BANDPASS*'

spw -- The list of spectral windows and channels to which the calibration
    will be applied. Defaults to all science windows in the pipeline
    context.

    default: ''
    example: spw='17', spw='11, 15'

-- Pipeline task execution modes

dryrun -- Run the commands (True) or generate the commands to be run but
    do not execute (False).

    default: True

acceptresults -- This parameter has no effect. The Tsyscal file is already
    in the pipeline context and is flagged in situ.


Output

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
    the results object for the pipeline task is returned.


Examples

1. Flag bad quadrants and wild outliers, default method:

    hif_rawflagchans()

equivalent to:

    hif_rawflagchans(flag_hilo=True, fhl_limit=20,
                     flag_bad_quadrant=True, fbq_hilo_limit=8,
                     fbq_antenna_frac_limit=0.2, fbq_baseline_frac_limit=1.0)
</example>
</task>
</casaxml>
