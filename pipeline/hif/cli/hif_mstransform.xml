<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd">

<task category="pipeline" name="hif_mstransform" type="function">
<shortdescription>Create new MeasurementSets for science target imaging</shortdescription>
<description>
Create new MeasurementSets for imaging from the corrected column of the input
MeasurementSet. By default all science target data is copied to the new MS. The
new MeasurementSet is not re-indexed to the selected data and the new MS will
have the same source, field, and spw names and ids as it does in the parent MS.

Output

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
    the results object for the pipeline task is returned.
</description>

<input>

  <param name="vis" subparam="true" type="stringVec">
    <shortdescription>The list of input MeasurementSets</shortdescription>
    <description>The list of input MeasurementSets. Defaults to the list of
                 MeasurementSets specified in the h_init or hif_importdata task.
                 '': use all MeasurementSets in the context

                 Examples: 'ngc5921.ms', ['ngc5921a.ms', ngc5921b.ms', 'ngc5921c.ms']
    </description>
    <value/>
  </param>

  <param name="outputvis" subparam="true" type="stringVec">
    <shortdescription>The list of transformed MeasurementSets to be used for imaging</shortdescription>
    <description>The list of output transformed MeasurementSets to be used for
                 imaging. The output list must be the same length as the input
                 list. The default output name defaults to
                 &lt;msrootname&gt;_target.ms

                 Examples: 'ngc5921.ms',
                           ['ngc5921a.ms', ngc5921b.ms', 'ngc5921c.ms']
    </description>
    <value/>
  </param>

  <param name="field" subparam="true" type="string">
    <shortdescription>Set of data selection field names or ids, \'\' for all</shortdescription>
    <description>Select fields name(s) or id(s) to transform. Only fields with
                 data matching the intent will be selected. 

                 Examples: '3C279', 'Centaurus*', '3C279,J1427-421'
    </description>
    <value/>
  </param>

  <param name="intent" subparam="true" type="string">
    <shortdescription>Set of data selection intents</shortdescription>
    <description>Select intents for which associated fields will be imaged.
                 By default only TARGET data is selected.

                 Examples: 'PHASE,BANDPASS'
    </description>
    <value/>
  </param>

  <param name="spw" subparam="true" type="string">
    <shortdescription>Set of data selection spectral window ids \'\' for all</shortdescription>
    <description>Select spectral window/channels to image. By default all
                 science spws for which the specified intent is valid are
                 selected .
    </description>
    <value/>
  </param>

  <param name="chanbin" type="int">
    <shortdescription>Width (bin) of input channels to average to form an output channel.</shortdescription>
    <description>Width (bin) of input channels to average to form an output
                 channel. If chanbin &gt; 1 then chanaverage is automatically
                 switched to True.
    </description>
    <value>1</value>
  </param>

  <param name="timebin" type="string">
    <shortdescription>Bin width for time averaging.</shortdescription>
    <description>Bin width for time averaging. If timebin &gt; 0s then
                 timeaverage is automatically switched to True.
    </description>
    <value type="string">0s</value>
  </param>

  <param name="pipelinemode" type="string">
    <shortdescription>The pipeline operating mode</shortdescription>
    <description>The pipeline operating mode</description>
    <description>The pipeline operating mode.
                 In 'automatic' mode the pipeline determines the values of all
                 context defined pipeline inputs automatically.
                 In 'interactive' mode the user can set the pipeline context
                 defined parameters manually.
                 In 'getinputs' mode the user can check the settings of all
                 pipeline parameters without running the task.
    </description>
    <value>automatic</value>
    <allowed kind="enum">
      <value>automatic</value>
      <value>interactive</value>
      <value>getinputs</value>
    </allowed>
  </param>

  <param name="dryrun" subparam="true" type="bool">
    <shortdescription>Run the task (False) or just display the command (True)</shortdescription>
    <description>Run the task (False) or just display the command (True)</description>
    <value>False</value>
  </param>

  <param name="acceptresults" subparam="true" type="bool">
    <shortdescription>Add the results to the pipeline context</shortdescription>
    <description>Add the results of the task to the pipeline context (True) or
                 reject them (False).
    </description>
   <value>True</value>
  </param>


  <constraints>

    <when param="pipelinemode">
      <equals type="string" value="automatic">
      </equals>
      <equals type="string" value="interactive">
        <default param="vis"><value type="stringVec"/></default>
        <default param="outputvis"><value type="stringVec"/></default>
        <default param="field"><value type="string"/></default>
        <default param="intent"><value type="string"/></default>
        <default param="spw"><value type="string"/></default>
        <default param="dryrun"><value type="bool">False</value></default>
        <default param="acceptresults"><value type="bool">True</value></default>
      </equals>
      <equals type="string" value="getinputs">
        <default param="vis"><value type="stringVec"/></default>
        <default param="outputvis"><value type="stringVec"/></default>
        <default param="field"><value type="string"/></default>
        <default param="intent"><value type="string"/></default>
        <default param="spw"><value type="string"/></default>
      </equals>
    </when>

  </constraints>


</input>


<returns>any</returns>


<example>
1. Create a science target MS from the corrected column in the input MS.

    hif_mstransform()

2. Make a phase and bandpass calibrator targets MS from the corrected
column in the input MS.

    hif_mstransform(intent='PHASE,BANDPASS')
</example>

</task>
</casaxml>
