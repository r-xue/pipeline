<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
file:///opt/casa/code/xmlcasa/xml/casa.xsd">

<task type="function" name="hif_gainflag" category="pipeline">
<shortdescription>Flag antennas with deviant gain</shortdescription>
<description>
Flag antennas with deviant gain
</description>
<input>
    <param type="stringArray" name="vis" subparam="true">
        <description>List of input measurement sets</description>
        <value></value>
    </param>

    <param type="string" name="intent" subparam="true">
        <description>Data intent whose gains are to checked</description>
        <value></value>
    </param>

    <param type="string" name="spw" subparam="true">
        <description>Spectral window ids whose gains are to be checked</description>
        <value></value>
    </param>

    <param type="string" name="refant" subparam="true">
        <description>Reference antenna names</description>
        <value></value>
    </param>

    <param type="bool" name="flag_mediandeviant">
        <description>True to flag antennas with deviant median gains</description>
        <value>True</value>
    </param>

    <param type="double" name="fmeddev_limit" subparam="true">
        <description>Flag antennas with \'mediandeviant\' metric larger than fmeddev_limit</description>
        <value>3.0</value>
    </param>

    <param type="bool" name="flag_rmsdeviant">
        <description>True to flag antennas with deviant gain rms</description>
        <value>True</value>
    </param>

    <param type="double" name="frmsdev_limit" subparam="true">
        <description>Flag antennas with \'rmsdeviant\' metric larger than frmsdev_limit</description>
        <value>3.0</value>
    </param>

    <param type="string" name="metric_order">
        <description>Order in which the flagging metrics are evaluated</description>
        <value>mediandeviant, rmsdeviant</value>
    </param>

    <param type="string" name="pipelinemode">
        <description>The pipeline operations mode</description>
        <value>automatic</value>
        <allowed kind="enum">
            <value>automatic</value>
            <value>interactive</value>
            <value>getinputs</value>
        </allowed>
    </param>

    <param type="bool" name="dryrun" subparam="true">
        <description>Run the task (False) or list commands(True)</description>
       <value>False</value>
    </param>

    <param type="bool" name="acceptresults" subparam="true">
        <description>Automatically apply results to context</description>
        <value>True</value>
    </param>

    <constraints>
        <when param="pipelinemode">
            <equals type="string" value="automatic" />
            <equals type="string" value="interactive">
                <default param="vis"><value type="stringArray"></value></default>
                <default param="intent"><value type="string"></value></default>
                <default param="spw"><value type="string"></value></default>
                <default param="refant"><value type="string"></value></default>
                <default param="dryrun"><value type="bool">False</value></default>
                <default param="acceptresults"><value type="bool">True</value></default>
            </equals>
            <equals type="string" value="getinputs">
                <default param="vis"><value type="stringArray"></value></default>
                <default param="intent"><value type="string"></value></default>
                <default param="spw"><value type="string"></value></default>
                <default param="refant"><value type="string"></value></default>
            </equals>
        </when>

        <when param="flag_mediandeviant">
            <equals type="bool" value="True">
                <default param="fmeddev_limit"><value type="float">3.0</value></default>
            </equals>
            <equals type="bool" value="False">
            </equals>
        </when>

        <when param="flag_rmsdeviant">
            <equals type="bool" value="True">
                <default param="frmsdev_limit"><value type="float">3.0</value></default>
            </equals>
            <equals type="bool" value="False">
            </equals>
        </when>

    </constraints>
</input>

<output>
    <param type="any" name="results">
        <description>The output results object</description>
        <any type="variant"/>
        <value></value>
    </param>
</output>
<returns type="void"/>


<example>

hif_gainflag flags data for antennas with deviant median gains and/or high gain rms.

Keyword arguments:

pipelinemode -- The pipeline operating mode. In 'automatic' mode the pipeline
   determines the values of all context defined pipeline inputs automatically.
   In interactive mode the user can set the pipeline context defined parameters
   manually.  In 'getinputs' mode the user can check the settings of all
   pipeline parameters without running the task.
   default: 'automatic'.

---- pipeline parameter arguments which can be set in any pipeline mode

intent -- The data intent to be checked for antennas with deviant gains. The
          default is blank, which causes the task to select the first
          intent in the list ['BANDPASS', 'PHASE', 'AMPLITUDE'] for which
          data are found.
    default ''

flag_mediandeviant -- True to flag antennas with deviant median gain, calculated as:
                      abs( median(antenna) - median(all antennas) ) / MAD(all antennas)  > fmeddev_limit
    default True

fmeddev_limit -- Flag antennas with \'mediandeviant\' metric larger than fmeddev_limit
    default 3.0

flag_rmsdeviant -- True to flag antennas with deviant gain rms, calculated as:
                   stdev(antenna) / MAD(all antennas) > frmsdev_limit
    default True

frmsdev_limit -- Flag antennas with \'rmsdeviant\' metric larger than frmsdev_limit
    default 3.0
    
metric_order -- Order in which the flagging metrics are evaluated.
    default 'mediandeviant, rmsdeviant'

---- pipeline context defined parameter arguments which can be set only in
'interactive mode'

-- Pipeline task execution modes

dryrun -- Run the commands (True) or generate the commands to be run but
   do not execute (False).
   default: True

acceptresults -- Add the results of the task to the pipeline context (True) or
   reject them (False).
   default: True

Output:

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
    the results object for the pipeline task is returned.

Description
Deviant antennas are detected by analysis of a view showing their calibration 
gains. Two flagging metrics are evaluated (mediandeviant, rmsdeviant) and 
a flagging view is created for each metric. Each view is a list of 2D images 
with axes 'Time' and 'Antenna'; there is one image for each spectral window and 
intent. If either of the flagging metrics exceeds their corresponding limits 
(fmeddev_limit, frmsdev_limit) for a given antenna in a given spw, then all data
for that antenna and for all spws within the same baseband will be flagged with 
a flagcmd.

The following heuristics are used for the two flagging metrics:

   mediandeviant:
     abs( median(antenna) - median(all antennas) ) / MAD(all antennas)  > fmeddev_limit

   rmsdeviant:
     stdev(antenna) / MAD(all antennas) > frmsdev_limit
     
   where MAD is the median absolute deviation from the median.

</example> 

</task>
</casaxml>

