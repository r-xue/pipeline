<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://casa.nrao.edu/schema/psetTypes.html">

<task category="pipeline" name="hif_setmodels" type="function">
<shortdescription>Set calibrator source models</shortdescription>
<description>
Set model fluxes values for calibrator reference and transfer sources using lookup
values. By default the reference sources are the flux calibrators and the transfer
sources are the bandpass, phase, and check source calibrators. Reference sources
which are also in the transfer source list are removed from the transfer source list.

Built-in lookup tables are used to compute models for solar system object calibrators.
Point source models for other calibrators are provided in the reference file.
Normalize fluxes are computed for transfer sources if the normfluxes parameter is
set to True.

The reference file default to a file called 'flux.csv' in the current working
directory. This file is normal created in the importdata step. The file is in
'csv' format and contains the following comma delimited columns.

vis,fieldid,spwid,I,Q,U,V,pix,comment


Output:

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
            the results object for the pipeline task is returned
</description>
<input>
    <param subparam="true" name="vis" type="string">
        <shortdescription>List of input MeasurementSets</shortdescription>
        <description>The list of input MeasurementSets. Defaults to the list of
            MeasurementSets specified in the pipeline context.

            example: ['M32A.ms', 'M32B.ms']
        </description>
        <value/>
    </param>

    <param subparam="true" name="reference" type="variant">
        <shortdescription>Reference calibrator field name(s)</shortdescription>
        <description>A string containing a comma delimited list of  field names
            defining the reference calibrators. Defaults to field names with
            intent 'AMPLITUDE'.

            example: 'M82,3C273'
        </description>
        <value type="string"/>
    </param>

    <param subparam="true" name="refintent" type="string">
        <shortdescription>Observing intent of reference fields</shortdescription>
        <description>A string containing a comma delimited list of intents
            used to select the reference calibrators. Defaults to 'AMPLITUDE'.

            example: 'BANDPASS'
        </description>
        <value>AMPLITUDE</value>
    </param>

    <param subparam="true" name="transfer" type="variant">
        <shortdescription>Transfer calibrator field name(s)</shortdescription>
        <description>A string containing a comma delimited list of  field names
            defining the transfer calibrators. Defaults to field names with
            intent ''.

            example: 'J1328+041,J1206+30'
        </description>
        <value type="string"/>
    </param>

    <param subparam="true" name="transintent" type="string">
        <shortdescription>Observing intent of transfer fields</shortdescription>
        <description>A string containing a comma delimited list of intents
            defining the transfer calibrators. Defaults to 'BANDPASS,PHASE,CHECK'.
            '' stands for no transfer sources.

            example: 'PHASE'
        </description>
        <value>BANDPASS</value>
    </param>

    <param name="reffile" type="string">
        <shortdescription>Path to file with fluxes for non-solar system calibrators</shortdescription>
        <description>The reference file containing a lookup table of point source models
            This file currently defaults to 'flux.csv' in the working directory. This
            file must conform to the standard pipeline 'flux.csv' format
            example: 'myfluxes.csv'
        </description>Normalize the transfer field lookup fluxes to 1.0. The reference
            field fluxes are never normalized.

            example: False
        <value/>
    </param>

    <param name="normfluxes" type="bool">
        <shortdescription>Normalize lookup fluxes</shortdescription>
        <description>
        </description>
        <value>True</value>
    </param>

    <param name="scalebychan" type="bool">
        <shortdescription>Scale the flux density on a per channel basis or else on a per spw basis</shortdescription>
        <description> Scale the flux density on a per channel basis or else on a per spw basis

            example: False
        </description>
        <value>True</value>
    </param>

    <param name="pipelinemode" type="string">
        <shortdescription>The pipeline operating mode</shortdescription>
        <description>The pipeline operating mode. In 'automatic' mode the pipeline
            determines the values of all context defined pipeline inputs automatically.
            In interactive mode the user can set the pipeline context defined
            parameters manually.  In 'getinputs' mode the users can check the settings
            of all pipeline parameters without running the task.
        </description>
        <value>automatic</value>
    <allowed kind="enum">
        <value>automatic</value>
        <value>interactive</value>
        <value>getinputs</value>
    </allowed>
    </param>

    <param subparam="true" name="dryrun" type="bool">
        <shortdescription>Run the task (False) or display commands (True)</shortdescription>
        <description>Run the commands (True) or generate the commands to be run but
            do not execute (False).
        </description>
        <value>False</value>
    </param>

    <param subparam="true" name="acceptresults" type="bool">
        <shortdescription>Automatically accept results into context</shortdescription>
        <description>Add the results of the task to the pipeline context (True) or
            reject them (False).
        </description>
        <value>True</value>
    </param>

    <constraints>
        <when param="pipelinemode">
            <equals value="automatic" type="string"/>
                <equals value="interactive" type="string">
                <default param="vis">    <value type="stringVec"/></default>
                <default param="reference">    <value type="string"/></default>
                <default param="refintent">    <value type="string">AMPLITUDE</value></default>
                <default param="transfer">    <value type="string"/></default>
                <default param="transintent">    <value type="string">BANDPASS,PHASE,CHECK</value></default>
                <default param="dryrun">    <value type="bool">False</value></default>
                <default param="acceptresults">    <value type="bool">True</value></default>
            </equals>
            <equals value="getinputs" type="string">
                <default param="vis">    <value type="stringVec"/></default>
                <default param="reference">    <value type="string"/></default>
                <default param="refintent">    <value type="string">AMPLITUDE</value></default>
                <default param="transfer">    <value type="string">BANDPASS,PHASE,CHECK</value></default>
                <default param="transintent">    <value type="string"/></default>
            </equals>
        </when>
    </constraints>

</input>


<returns>any</returns>


<example>
1. Set model fluxes for the flux, bandpass, phase, and check sources.

   hif_setmodels()
</example>

</task>
</casaxml>
