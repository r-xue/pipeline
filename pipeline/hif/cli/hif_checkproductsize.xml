<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd">

<task category="pipeline" name="hif_checkproductsize" type="function">
<shortdescription>Check imaging product size</shortdescription>
<description>
Check interferometry imaging product size and try to mitigate to maximum
allowed values. The task implements a mitigation cascade computing the largest
cube size and trying to reduce it below a given limit by adjusting the nbins,
hm_imsize and hm_cell parameters. If this step succeeds, it also checks the
overall imaging product size and if necessary reduces the number of fields to
be imaged.

Alternatively, if maximsize is set, the image product pixel count is
mitigated by trying to adjust hm_cell parameter. If the pixel count is still
greater than maximsize at hm_cell of 4ppb, then this value is kept and
the image field is truncated around the phase center by forcing hm_imsize
= maximsize.

Note that mitigation for image pixel count and for the product size currently
are mutually exclusive.

Output:

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
    the results object for the pipeline task is returned.
</description>
<input>

  <param name="vis" subparam="true" type="stringVec">
    <shortdescription>List of input MeasurementSets</shortdescription>
    <description>The list of input MeasurementSets. Defaults to the list of
                 MeasurementSets specified in the h_init or hif_importdata task.
                 \'\': use all MeasurementSets in the context

                 Examples: 'ngc5921.ms', ['ngc5921a.ms', ngc5921b.ms', 'ngc5921c.ms']
    </description>
    <value/>
  </param>

  <param name="maxcubesize" subparam="true" type="double">
     <shortdescription>Maximum allowed cube size (mitigation goal)</shortdescription>
     <description>Maximum allowed cube size in gigabytes (mitigation goal)
         -1: automatic from performance parameters
     </description>
     <value>-1.0</value>
  </param>

  <param name="maxcubelimit" subparam="true" type="double">
     <shortdescription>Maximum allowed cube limit (mitigation failure limit)</shortdescription>
     <description>Maximum allowed cube limit in gigabytes (mitigation failure
         limit)
         -1: automatic from performance parameters
     </description>
     <value>-1.0</value>
  </param>

  <param name="maxproductsize" subparam="true" type="double">
     <shortdescription>Maximum allowed product size (mitigation goal and failure limit)</shortdescription>
     <description>Maximum allowed product size in gigabytes (mitigation goal and
         failure limit)
         -1: automatic from performance parameters
     </description>
     <value>-1.0</value>
  </param>

  <param name="maximsize" subparam="true" type="double">
     <shortdescription>Maximum allowed image pixel count</shortdescription>
     <description>Maximum allowed image count size (mitigation goal and hard
         maximum).
         Parameter maximsize must be even and divisible by 2,3,5,7 only.
         Note that maximsize is disabled by default and cannot be set at
         the same time as maxcubesize, maxcubelimit and maxproductsize!
         -1: disables mitigation for this parameter
     </description>
     <value>-1.0</value>
  </param>

  <param name="calcsb" type="bool">
    <shortdescription>Force (re-)calculation of sensitivities and beams</shortdescription>
    <description>Force (re-)calculation of sensitivities and beams</description>
    <value>False</value>
  </param>

  <param name="parallel" type="string">
    <shortdescription>Use MPI cluster where possible</shortdescription>
    <description>Use MPI cluster where possible</description>
    <value>automatic</value>
    <allowed kind="enum">
      <value>automatic</value>
      <value>true</value>
      <value>false</value>
    </allowed>
  </param>

  <param name="pipelinemode" type="string">
    <shortdescription>The pipeline operating mode</shortdescription>
    <description>The pipeline operating mode.
                 In 'automatic' mode the pipeline determines the values of all
                 context defined pipeline inputs automatically.
                 In 'interactive' mode the user can set the pipeline context
                 defined parameters manually.
                 In 'getinputs' mode the user can check the settings of all
                 pipeline parameters without running the task.
    </description>
    <value>automatic</value>
    <allowed kind="enum">
      <value>automatic</value>
      <value>interactive</value>
      <value>getinputs</value>
    </allowed>
  </param>

  <param name="dryrun" subparam="true" type="bool">
    <shortdescription>Run the task (False) or just display the command (True)</shortdescription>
    <description>Run the task (False) or just display the command (True)</description>
    <value>False</value>
  </param>

  <param name="acceptresults" subparam="true" type="bool">
    <shortdescription>Add the results to the pipeline context</shortdescription>
    <description>Add the results of the task to the pipeline context (True) or
                 reject them (False).
    </description>
   <value>True</value>
  </param>


  <constraints>

    <when param="pipelinemode">
      <equals type="string" value="automatic"/>
      <equals type="string" value="interactive">
        <default param="vis"><value type="stringVec"/></default>
        <default param="maxcubesize"><value>-1.0</value></default>
        <default param="maxcubelimit"><value>-1.0</value></default>
        <default param="maxproductsize"><value>-1.0</value></default>
        <default param="maximsize"><value>-1.0</value></default>
        <default param="dryrun"><value type="bool">False</value></default>
        <default param="acceptresults"><value type="bool">True</value></default>
      </equals>
      <equals type="string" value="getinputs">
        <default param="vis"><value type="stringVec"/></default>
        <default param="target_list"><value>{}</value></default>
      </equals>
    </when>

  </constraints>

</input>


<returns>any</returns>


<example>
</example>

</task>
</casaxml>
