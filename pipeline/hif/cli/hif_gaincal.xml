<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd">

<task category="pipeline" name="hif_gaincal" type="function">

<shortdescription>Determine temporal gains from calibrator observations</shortdescription>
<description>
The complex gains are derived from the data column (raw data) divided by the
model column (usually set with hif_setjy). The gains are obtained for a
specified solution interval, spw combination and field combination.

Good candidate reference antennas can be determined using the hif_refant
task.

Previous calibrations that have been stored in the pipeline context are
applied on the fly. Users can interact with these calibrations via the
hif_export_calstate and hif_import_calstate tasks.

Output

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
    the results object for the pipeline task is returned.

Issues

The 'gspline' (smooth) option is still under development in CASA.
</description>

<input>
  <param name="vis" subparam="true" type="stringVec">
    <shortdescription>List of input MeasurementSets</shortdescription>
    <description>The list of input MeasurementSets. Defaults to the list of
                 MeasurementSets specified in the h_init or hif_importdata task.
                 '': use all MeasurementSets in the context

                 Examples: 'ngc5921.ms', ['ngc5921a.ms', ngc5921b.ms', 'ngc5921c.ms']
    </description>
    <value/>
  </param>

  <param name="caltable" subparam="true" type="stringVec">
    <shortdescription>List of output caltables</shortdescription>
    <description>The list of output calibration tables. Defaults to the
                 standard pipeline naming convention.

                 Example: caltable=['M82.gcal', 'M82B.gcal']
    </description>
    <value type="string"/>
  </param>

  <param name="field" subparam="true" type="string">
    <shortdescription>Set of data selection field names or ids</shortdescription>
    <description>The list of field names or field ids for which gain solutions
                 are to be computed. Defaults to all fields with the standard
                 intent.

                 Example: field='3C279', field='3C279, M82'
    </description>
    <value/>
  </param>

  <param name="intent" subparam="true" type="string">
    <shortdescription>Set of data selection observing intents</shortdescription>
    <description>A string containing a comma delimited list of intents against
                 which the selected fields are matched. Defaults to *PHASE*.

                 Examples: intent='', intent='*AMP*,*PHASE*'
    </description>
    <value/>
  </param>

  <param name="spw" subparam="true" type="string">
    <shortdescription>Set of data selection spectral window/channels</shortdescription>
    <description>The list of spectral windows and channels for which gain
                 solutions are computed. Defaults to all science spectral
                 windows.

                 Examples: spw='3C279', spw='3C279, M82'
    </description>
    <value/>
  </param>

  <param name="antenna" subparam="true" type="string">
    <shortdescription>Set of data selection antenna ids</shortdescription>
    <description>Set of data selection antenna ids</description>
    <value/>
  </param>

  <param name="hm_gaintype" type="string">
    <shortdescription>The gain solution type (gtype or gspline)</shortdescription>
    <description>The type of gain calibration. The options are 'gtype' and
                 'gspline' for CASA gain types = 'G' and 'GSPLINE' respectively.
    </description>
    <value>gtype</value>
    <allowed kind="enum">
      <value>gtype</value>
      <value>gspline</value>
    </allowed>
  </param>

  <param name="calmode" type="string">
    <shortdescription>Type of solution (ap, p, a)</shortdescription>
    <description>Type of solution. The options are 'ap' (amp and phase), 'p'
                 (phase only) and 'a' (amp only).

                 Examples: calmode='p', calmode='a', calmode='ap'
    </description>
    <value>ap</value>
    <allowed kind="enum">
      <value>a</value>
      <value>p</value>
      <value>ap</value>
    </allowed>
  </param>

  <param name="solint" subparam="true" type="any">
    <shortdescription>Solution intervals</shortdescription>
    <description>Time solution intervals in CASA syntax. Works for
                 hm_gaintype='gtype' only.

                 Examples: solint='inf', solint='int', solint='100sec'
    </description>
    <any type="variant"/>
    <value type="string">inf</value>
  </param>

  <param name="combine" subparam="true" type="string">
    <shortdescription>Data axes which to combine for solve (scan, spw, and/or field)</shortdescription>
    <description>Data axes to combine for solving. Options are  '', 'scan',
                 'spw', 'field' or any comma-separated combination. Works for
                 hm_gaintype='gtype' only.
    </description>
    <value type="string"/>
  </param>

  <param name="refant" subparam="true" type="string">
    <shortdescription>Reference antenna names</shortdescription>
    <description>Reference antenna name(s) in priority order. Defaults to most
                 recent values set in the pipeline context. If no reference
                 antenna is defined in the pipeline context use the CASA
                 defaults.

                 Examples: refant='DV01', refant='DV05,DV07'
    </description>
    <value/>
  </param>

  <param name="refantmode" subparam="true" type="string">
    <shortdescription>Reference antenna selection mode</shortdescription>
    <description>Controls how the refant is applied. Currently available
                 choices are 'flex', 'strict', and the default value of ''.
                 Setting to '' allows the pipeline to select the appropriate
                 mode based on the state of the reference antenna list.

                 Examples: refantmode='strict', refantmode=''
    </description>
    <value/>
    <allowed kind="enum">
      <value/>
      <value>flex</value>
      <value>strict</value>
    </allowed>
  </param>

  <param name="solnorm" subparam="true" type="bool">
    <shortdescription>Normalize average solution amplitudes to 1.0</shortdescription>
    <description>Normalize average solution amplitudes to 1.0</description>
    <value>False</value>
  </param>

  <param name="minblperant" subparam="true" type="int">
    <shortdescription>Minimum baselines per antenna required for solve</shortdescription>
    <description>Minimum number of baselines required per antenna for each
                 solve. Antennas with fewer baselines are excluded from
                 solutions. Works for hm_gaintype='gtype' only.
    </description>
    <value>4</value>
  </param>

  <param name="minsnr" subparam="true" type="double">
    <shortdescription>Reject solutions below this SNR</shortdescription>
    <description>Solutions below this SNR are rejected. Works for
                 hm_gaintype='channel' only.
    </description>
    <value>3.0</value>
  </param>

  <param name="smodel" subparam="true" type="doubleVec">
    <shortdescription>Point source Stokes parameters for source model</shortdescription>
    <description>Point source Stokes parameters for source model (experimental).
                 Defaults to using standard MODEL_DATA column data.

                 Example: smodel=[1,0,0,0]  - (I=1, unpolarized)
    </description>
    <value/>
  </param>

  <param name="splinetime" subparam="true" type="double">
    <shortdescription>Spline timescale(sec)</shortdescription>
    <description>Spline timescale (sec). Used for hm_gaintype='gspline'.
                 Typical splinetime should cover about 3 to 5 calibrator scans.
    </description>
    <value>3600.0</value>
  </param>

  <param name="npointaver" subparam="true" type="int">
    <shortdescription>The phase-unwrapping algorithm</shortdescription>
    <description>Tune phase-unwrapping algorithm. Used for
                 hm_gaintype='gspline'. Keep at default value.
    </description>
    <value>3</value>
  </param>

  <param name="phasewrap" subparam="true" type="double">
    <shortdescription>Wrap the phase for jumps greater than this value (degrees)</shortdescription>
    <description>Wrap the phase for changes larger than this amount (degrees).
                 Used for hm_gaintype='gspline'. Keep at default value.
    </description>
    <value>180.0</value>
  </param>

  <param name="pipelinemode" type="string">
    <shortdescription>The pipeline operating mode</shortdescription>
    <description>The pipeline operating mode.
                 In 'automatic' mode the pipeline determines the values of all
                 context defined pipeline inputs automatically.
                 In 'interactive' mode the user can set the pipeline context
                 defined parameters manually.
                 In 'getinputs' mode the user can check the settings of all
                 pipeline parameters without running the task.
    </description>
    <value>automatic</value>
    <allowed kind="enum">
      <value>automatic</value>
      <value>interactive</value>
      <value>getinputs</value>
    </allowed>
  </param>

  <param name="dryrun" subparam="true" type="bool">
    <shortdescription>Run the task (False) or just display the command (True)</shortdescription>
    <description>Run the task (False) or just display the command (True)</description>
    <value type="bool">False</value>
  </param>

  <param name="acceptresults" subparam="true" type="bool">
    <shortdescription>Add the results to the pipeline context</shortdescription>
    <description>Add the results of the task to the pipeline context (True) or
                 reject them (False).
    </description>
    <value type="bool">True</value>
  </param>

  <constraints>
    <when param="hm_gaintype">
      <equals type="string" value="gtype">
        <default param="solint"><value type="string">inf</value></default>
        <default param="combine"><value type="string"/></default>
        <default param="minblperant"><value>4</value></default>
        <default param="minsnr"><value>3.0</value></default>
      </equals>
      <equals type="string" value="gspline">
        <default param="splinetime"><value>3600.0</value></default>
        <default param="npointaver"><value>3</value></default>
        <default param="phasewrap"><value>180.0</value></default>
      </equals>
    </when>

    <when param="pipelinemode">
      <equals type="string" value="automatic"/>
      <equals type="string" value="interactive">
        <default param="vis"><value type="stringVec"/></default>
        <default param="caltable"><value type="stringVec"/></default>
        <default param="field"><value type="string"/></default>
        <default param="intent"><value type="string"/></default>
        <default param="spw"><value type="string"/></default>
        <default param="antenna"><value type="string"/></default>
        <default param="smodel"><value type="doubleVec"/></default>
        <default param="solnorm"><value type="bool">False</value></default>
        <default param="refant"><value type="string"/></default>
        <default param="refantmode"><value type="string"/></default>
        <default param="dryrun"><value type="bool">False</value></default>
        <default param="acceptresults"><value type="bool">True</value></default>
      </equals>
      <equals type="string" value="getinputs">
        <default param="vis"><value type="stringVec"/></default>
        <default param="caltable"><value type="stringVec"/></default>
        <default param="field"><value type="string"/></default>
        <default param="intent"><value type="string"/></default>
        <default param="spw"><value type="string"/></default>
        <default param="antenna"><value type="string"/></default>
        <default param="smodel"><value type="doubleVec"/></default>
        <default param="solnorm"><value type="bool">False</value></default>
        <default param="refant"><value type="string"/></default>
        <default param="refantmode"><value type="string"/></default>
      </equals>
    </when>
  </constraints>
</input>


<returns>any</returns>

<example>
Compute standard per scan gain solutions that will be used to calibrate
the target:

    hif_gaincal()
</example>
</task>
</casaxml>
