<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://casa.nrao.edu/schema/psetTypes.html">

<task category="pipeline" name="hif_antpos" type="function">

<shortdescription>Derive an antenna position calibration table</shortdescription>
<description>
Derive the antenna position calibration for list of MeasurementSets.

The hif_antpos task corrects the antenna positions recorded in the ASDMs using
updated antenna position calibration information determined after the
observation was taken.

Corrections can be input by hand, read from a file on disk, or in the future
by querying an ALMA database service.

The antenna positions file is in 'csv' format containing 6 comma-delimited
columns as shown below. The default name of this file is 'antennapos.csv'.

Contents of example 'antennapos.csv' file:

 ms,antenna,xoffset,yoffset,zoffset,comment
 uid___A002_X30a93d_X43e.ms,DV11,0.000,0.010,0.000,&quot;No comment&quot;
 uid___A002_X30a93d_X43e.dup.ms,DV11,0.000,-0.010,0.000,&quot;No comment&quot;

The corrections are used to generate a calibration table which is recorded
in the pipeline context and applied to the raw visibility data, on the fly to
generate other calibration tables, or permanently to generate calibrated
visibilities for imaging.


Issues

The hm_antpos 'online' option will be implemented when the observing system
provides an antenna position determination service.

Output

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
    the results object for the pipeline task is returned.
</description>

<input>
    <param subparam="true" name="vis" type="stringVec">
        <shortdescription>List of input MeasurementSets</shortdescription>
        <description>List of input visibility files.
        Not available when pipelinemode='automatic'.
        example: ['ngc5921.ms']</description>
        <value/>
    </param>

    <param subparam="true" name="caltable" type="stringVec">
        <shortdescription>List of output caltable(s)</shortdescription>
        <description>Name of output gain calibration tables.
        Not available when pipelinemode='automatic'.
        example: ['ngc5921.gcal']</description>
        <value/>
    </param>

    <param name="hm_antpos" type="string">
        <shortdescription>The antenna position determination method</shortdescription>
        <description>Heuristics method for retrieving the antenna position
        corrections. The options are 'online' (not yet implemented), 'manual',
        and 'file'.</description>
        <value>manual</value>
        <allowed kind="enum">
            <value>manual</value>
            <value>file</value>
            <value>online</value>
        </allowed>
    </param>

    <param subparam="true" name="antenna" type="string">
        <shortdescription>List of antennas to be corrected</shortdescription>
        <description>The list of antennas for which the positions are to be corrected.
        Available when hm_antpos='manual'.
        example: antenna='DV05,DV07'</description>
        <value/>
    </param>

    <param subparam="true" name="offsets" type="doubleVec">
        <shortdescription>List of position corrections, one set per antenna</shortdescription>
        <description>The list of antenna offsets for each antenna in 'antennas'. Each
        offset is a set of 3 floating point numbers separated by commas, specified
        in the ITRF frame. Available when hm_antpos='manual'.
        example: offsets=[0.01, 0.02, 0.03, 0.03, 0.02, 0.01]</description>
        <value/>
    </param>

    <param subparam="true" name="antposfile" type="string">
        <shortdescription>File containing antenna position corrections</shortdescription>
        <description>The file(s) containing the antenna offsets. Used if hm_antpos
        is 'file'.
        example: 'antennapos.csv'</description>
        <value/>
    </param>

    <param name="pipelinemode" type="string">
        <shortdescription>The pipeline operation mode</shortdescription>
        <description>The pipeline operating mode. In 'automatic' mode the pipeline
        determines the values of all context defined pipeline inputs automatically.
        In interactive mode the user can set the pipeline context defined
        parameters manually. In 'getinputs' mode the user can check the settings of
        all pipeline parameters without running the task.</description>
        <value>automatic</value>
        <allowed kind="enum">
            <value>automatic</value>
            <value>interactive</value>
            <value>getinputs</value>
        </allowed>
    </param>

    <param subparam="true" name="dryrun" type="bool">
        <shortdescription>Run the task (False) or list commands (True)</shortdescription>
        <description>Run the task (False) or list commands (True).
        Available when pipelinemode='interactive'.</description>
       <value>False</value>
    </param>

    <param subparam="true" name="acceptresults" type="bool">
        <shortdescription>Automatically accept results into context</shortdescription>
        <description>Add the results of the task to the pipeline context (True) or
        reject them (False). Available when pipelinemode='interactive'.</description>
        <value>True</value>
    </param>

    <constraints>
        <when param="hm_antpos">
            <equals value="manual" type="string">
                <default param="antenna"><value type="string"/></default>
                <default param="offsets"><value type="string"/></default>
            </equals>
            <equals value="file" type="string">
                <default param="antposfile"><value type="string"/></default>
            </equals>
            <equals value="online" type="string">
            </equals>
        </when>

        <when param="pipelinemode">
            <equals value="automatic" type="string"/>
            <equals value="interactive" type="string">
                <default param="vis"><value type="stringVec"/></default>
                <default param="caltable"><value type="stringVec"/></default>
                <default param="dryrun"><value type="bool">False</value></default>
                <default param="acceptresults"><value type="bool">True</value></default>
            </equals>
            <equals value="getinputs" type="string">
                <default param="vis"><value type="stringVec"/></default>
                <default param="caltable"><value type="stringVec"/></default>
            </equals>
        </when>
    </constraints>
</input>


<returns>any</returns>

<example>

1. Correct the position of antenna 5 for all the visibility files in a single
pipeline run:

    hif_antpos(antenna='DV05', offsets=[0.01, 0.02, 0.03])

2. Correct the position of antennas for all the visibility files in a single
pipeline run using antenna positions files on disk. These files are assumed
to conform to a default naming scheme if 'antposfile' is unspecified by the
user:

    hif_antpos(hm_antpos='file', antposfile='myantposfile.csv')

</example> 
</task>
</casaxml>
