<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://casa.nrao.edu/schema/psetTypes.html">

<task category="pipeline" name="hif_makeimlist" type="function">
<shortdescription>Compute list of clean images to be produced</shortdescription>
<description>
Create a a list of images to be cleaned.

Output

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
           the results object for the pipeline task is returned.
</description>
<input>

  <param subparam="true" name="vis" type="stringVec">
    <shortdescription>List of input MeasurementSets</shortdescription>
    <description>The list of input MeasurementSets. Defaults to the list of
                 MeasurementSets specified in the h_init or hif_importdata task.
                 \'\': use all MeasurementSets in the context
                 Examples: 'ngc5921.ms', ['ngc5921a.ms', ngc5921b.ms', 'ngc5921c.ms']
    </description>
    <value/>
  </param>

  <param subparam="true" name="imagename" type="string">
     <description>Prefix for output image names, \'\' for automatic.</description>
     <value/>
  </param>

  <param subparam="true" name="intent" type="string">
    <shortdescription>Set of data selection intents</shortdescription>
    <description>Select intents for which associated fields will be imaged.
                 Possible choices are PHASE, BANDPASS, AMPLITUDE, CHECK and
                 TARGET or combinations thereof.
                 Examples: 'PHASE,BANDPASS', 'TARGET'
    </description>
    <value>TARGET</value>
  </param>

  <param subparam="true" name="field" type="string">
    <shortdescription>Set of data selection field names or ids, \'\' for all</shortdescription>
    <description>Select fields to image. Use field name(s) NOT id(s). Mosaics
                 are assumed to have common source / field names.  If intent is
                 specified only fields with data matching the intent will be
                 selected. The fields will be selected from MeasurementSets in
                 'vis'.
                 '' Fields matching intent, one image per target source.
    </description>
    <value/>
  </param>

  <param subparam="true" name="spw" type="string">
    <shortdescription>Set of data selection spectral window/channels, \'\' for automatic</shortdescription>
    <description>Select spectral windows to image.
                 '': Images will be computed for all science spectral windows.
    </description>
    <value/>
  </param>

  <param subparam="true" name="contfile" type="string">
    <description>Name of file with frequency ranges to use for continuum images.</description>
    <value/>
  </param>

  <param subparam="true" name="linesfile" type="string">
    <description>Name of file with line frequency ranges to exclude for continuum images.</description>
    <value/>
  </param>

  <param subparam="true" name="uvrange" type="string">
    <shortdescription>Set of data selection uv ranges, \'\' for all.</shortdescription>
    <description>Select a set of uv ranges to image.
                 \'\' All uv data is included
                 Examples: '0~1000klambda', ['0~100klambda', 100~1000klambda]
    </description>
    <type>string</type><type>stringVec</type>
    <value type="string"/>
  </param>

  <param name="specmode" type="string">
    <shortdescription>Spectral gridding type (mfs, cont, cube, repBW, \'\' for automatic defaults)</shortdescription>
    <description>Frequency imaging mode, 'mfs', 'cont', 'cube', 'repBW'. \'\'
                 defaults to 'cube' if intent parameter includes 'TARGET'
                 otherwise 'mfs'.

                 specmode='mfs' produce one image per source and spw
                 specmode='cont' produce one image per source and aggregate
                          over all specified spws
                 specmode='cube' produce an LSRK frequency cube, channels are
                          specified in frequency
                 specmode='repBW' produce an LSRK frequency cube at
                          representative channel width
    </description>
    <value/>
      <allowed kind="enum">
        <value/>
        <value>mfs</value>
        <value>cont</value>
        <value>cube</value>
        <value>repBW</value>
      </allowed>
  </param>

  <param subparam="true" name="outframe" type="string">
     <description>velocity frame of output image (LSRK, \'\' for automatic)</description>
     <value/>
       <allowed kind="enum">
         <value/>
         <value>LSRK</value>
       </allowed>
  </param>

  <param subparam="true" name="hm_imsize" type="stringVec">
    <shortdescription>Image X and Y size(s) in pixels or PB level (single fields), '' for automatic. Single value same for both. '&lt;number&gt;pb' for PB level.</shortdescription>
    <description>Image X and Y size in pixels or PB level for single fields.
                 The explicit sizes must be even and divisible by 2,3,5,7 only.
                 The default values are derived as follows:
                   1. Determine phase center and spread of field centers
                      around it.
                   2. Set the size of the image to cover the spread of field
                      centers plus a border of width 0.75 * beam radius, to
                      first null.
                   3. Divide X and Y extents by cell size to arrive at the
                      number of pixels required.
                 The PB level setting for single fields leads to an imsize
                 extending to the specified level plus 5% padding in all
                 directions.
                 Examples: '0.3pb', [120, 120]
    </description>
    <value/>
  </param>

  <param subparam="true" name="hm_cell" type="stringVec">
    <shortdescription>Image X and Y cell size(s) with units or pixels per beam, '' for automatic. Single value same for both. '&lt;number&gt;ppb' for pixels per beam.</shortdescription>
    <description>Image X and Y cell sizes. \'\' computes the cell size based on
                 the UV coverage of all the fields to be imaged and uses a
                 5 pix per beam sampling.
                 The pix per beam specification ('&lt;number&gt;ppb') uses the above
                 default cell size ('5ppb') and scales it accordingly.
                 The cells can also be specified as explicit measures.
                 Examples: '3ppb', ['0.5arcsec', '0.5arcsec']
    </description>
    <value/>
  </param>

  <param subparam="true" name="calmaxpix" type="int">
    <shortdescription>Maximum X and Y size of calibrator images in pixels</shortdescription>
    <description>Maximum image X or Y size in pixels if a calibrator is being
                 imaged ('PHASE', 'BANDPASS', 'AMPLITUDE' or 'FLUX' intent).
    </description>
    <value>300</value>
  </param>

  <param subparam="true" name="phasecenter" type="any">
    <shortdescription>Image center (direction or field index, '' for automatic)</shortdescription>
    <description>Direction measure or field id of the image center.
                 The default phase center is set to the mean of the field
                 directions of all fields that are to be image together.
                 Examples: 'J2000 19h30m00 -40d00m00', 0
    </description>
    <any type="variant"/>
    <value type="string"/>
  </param>

  <param subparam="true" name="nchan" type="int">
    <shortdescription>Number of channels, -1 = all </shortdescription>
    <description>Total number of channels in the output image(s)
                 -1 selects enough channels to cover the data selected by
                 spw consistent with start and width.
    </description>
    <value>-1</value>
  </param>

  <param subparam="true" name="start" type="any">
    <shortdescription>Channel start, '' for automatic</shortdescription>
    <description>Start of image frequency axis as frequency or velocity.
                 '' selects start frequency automatically.
    </description>
    <any type="variant"/>
    <value type="string"/>
  </param>

  <param subparam="true" name="width" type="any">
    <shortdescription>Channel width, '' for automatic.</shortdescription>
    <description>Output channel width.
                 Difference in frequency between 2 selected channels for
                 frequency mode images.
                 'pilotimage' for 15 MHz / 8 channel heuristic
    </description>
    <any type="variant"/>
    <value type="string"/>
  </param>

  <param subparam="true" name="nbins" type="any">
    <shortdescription>Channel binning factors per spw, '' for automatic.</shortdescription>
    <description>Channel binning factors for each spw.
                 Format: 'spw1:nb1,spw2:nb2,...' with optional wildcards: '*:nb'
                 Examples: '9:2,11:4,13:2,15:8', '*:2'
    </description>
    <any type="variant"/>
    <value type="string"/>
  </param>

  <param subparam="true" name="robust" type="double">
    <shortdescription>Briggs robustness parameter</shortdescription>
    <description>Briggs robustness parameter
                 Values range from -2.0 (uniform) to 2.0 (natural)
    </description>
    <value>-999.0</value>
  </param>

  <param subparam="true" name="uvtaper" type="stringVec">
    <description>uv-taper on outer baselines</description>
    <value/>
  </param>

  <param subparam="true" name="clearlist" type="bool">
    <description>Clear any existing target list</description>
    <value>True</value>
  </param>

  <param subparam="true" name="per_eb" type="bool">
    <description>Make an image target per EB</description>
    <value>False</value>
  </param>

  <param name="calcsb" type="bool">
    <description>Force (re-)calculation of sensitivities and beams</description>
    <value>False</value>
  </param>

  <param name="parallel" type="string">
    <description>Use MPI cluster where possible</description>
    <value>automatic</value>
    <allowed kind="enum">
      <value>automatic</value>
      <value>true</value>
      <value>false</value>
    </allowed>
  </param>

  <param name="pipelinemode" type="string">
    <shortdescription>The pipeline operating mode</shortdescription>
    <description>The pipeline operating mode.
                 In 'automatic' mode the pipeline determines the values of all
                 context defined pipeline inputs automatically.
                 In 'interactive' mode the user can set the pipeline context
                 defined parameters manually.
                 In 'getinputs' mode the user can check the settings of all
                 pipeline parameters without running the task.
    </description>
    <value>automatic</value>
    <allowed kind="enum">
      <value>automatic</value>
      <value>interactive</value>
      <value>getinputs</value>
    </allowed>
  </param>

  <param subparam="true" name="dryrun" type="bool">
    <description>Run the task (False) or just display the command (True)</description>
    <value>False</value>
  </param>

  <param subparam="true" name="acceptresults" type="bool">
    <shortdescription>Add the results to the pipeline context</shortdescription>
    <description>Add the results of the task to the pipeline context (True) or
                 reject them (False).
    </description>
   <value>True</value>
  </param>


  <constraints>

    <when param="pipelinemode">
      <equals value="automatic" type="string">
      </equals>
      <equals value="interactive" type="string">
        <default param="vis"><value type="stringVec"/></default>
        <default param="imagename"><value type="string"/></default>
        <default param="intent"><value type="string"/></default>
        <default param="field"><value type="string"/></default>
        <default param="spw"><value type="string"/></default>
        <default param="contfile"><value type="string"/></default>
        <default param="linesfile"><value type="string"/></default>
        <default param="uvrange"><value type="string"/></default>
        <default param="phasecenter"><value type="string"/></default>
        <default param="start"><value type="string"/></default>
        <default param="nchan"><value type="int">-1</value></default>
        <default param="hm_imsize"><value type="stringVec"/></default>
        <default param="hm_cell"><value type="stringVec"/></default>
        <default param="width"><value type="string"/></default>
        <default param="nbins"><value type="string"/></default>
        <default param="robust"><value type="double">-999.0</value></default>
        <default param="uvtaper"><value type="stringVec"/></default>
        <default param="clearlist"><value type="bool">True</value></default>
        <default param="per_eb"><value type="bool">False</value></default>
        <default param="dryrun"><value type="bool">False</value></default>
        <default param="acceptresults"><value type="bool">True</value></default>
      </equals>
      <equals value="getinputs" type="string">
        <default param="vis"><value type="stringVec"/></default>
        <default param="imagename"><value type="string"/></default>
        <default param="intent"><value type="string"/></default>
        <default param="field"><value type="string"/></default>
        <default param="spw"><value type="string"/></default>
        <default param="contfile"><value type="string"/></default>
        <default param="linesfile"><value type="string"/></default>
        <default param="uvrange"><value type="string"/></default>
        <default param="phasecenter"><value type="string"/></default>
        <default param="start"><value type="string"/></default>
        <default param="nchan"><value type="int">-1</value></default>
      </equals>
    </when>

    <when param="specmode">
      <equals value="" type="string">
      </equals>
      <equals value="mfs" type="string">
      </equals>
      <equals value="cube" type="string">
        <default param="outframe"><value type="string"/></default>
      </equals>
    </when>

  </constraints>

</input>


<returns>any</returns>


<example>
Generate a list of images to be cleaned. By default the list will include
one image per science target per spw. Calibrator targets can be selected
by setting appropriate values for intent.

By default the output image cell size is set to the minimum cell size
consistent with the UV coverage.

By default the image size in pixels is set to values determined by the
cell size and the single dish beam size. If a calibrator is being
imaged (intents 'PHASE', 'BANDPASS', 'FLUX' or 'AMPLITUDE') then the
image dimensions are limited to 'calmaxpix' pixels.

By default science target images are cubes and calibrator target images
are single channel. Science target images may be mosaics or single fields.

Issues

TBD
Examples

1. Make a list of science target images to be cleaned, one image per science 
spw.

    hif_makeimlist()

2. Make a list of PHASE and BANDPASS calibrator targets to be imaged,
one image per science spw.

    hif_makeimlist(intent='PHASE,BANDPASS')

3. Make a list of PHASE calibrator images observed in spw 1, images limited to 
50 pixels on a side.

    hif_makeimlist(intent='PHASE',spw='1',calmaxpix=50)
</example>

</task>
</casaxml>
