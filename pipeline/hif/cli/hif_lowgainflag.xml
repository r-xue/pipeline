<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://casa.nrao.edu/schema/psetTypes.html">

<task category="pipeline" name="hif_lowgainflag" type="function">

<shortdescription>Flag antennas with low or high gain</shortdescription>
<description>
Flag antennas with unusually low or high gain.

Deviant antennas are detected by analysis of a view showing their calibration
gains. This view is a list of 2D images with axes 'Time' and 'Antenna'; there
is one image for each spectral window and intent. A flagcmd to flag all data
for an antenna will be generated by any gain that is outside the range
[fnm_lo_limit * median, fnm_hi_limit * median].

Output

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
           the results object for the pipeline task is returned.
</description>

<input>
  <param subparam="true" name="vis" type="stringVec">
    <shortdescription>List of input MeasurementSets</shortdescription>
    <description>The list of input MeasurementSets. Defaults to the list of
                 MeasurementSets specified in the h_init or hif_importdata task.
                 '': use all MeasurementSets in the context
                 Examples: 'ngc5921.ms', ['ngc5921a.ms', ngc5921b.ms', 'ngc5921c.ms']
    </description>
    <value/>
  </param>

  <param subparam="true" name="intent" type="string">
    <shortdescription>Data intent whose gains are to checked</shortdescription>
    <description>A string containing the list of intents to be checked for
                 antennas with deviant gains. The default is blank, which
                 causes the task to select the 'BANDPASS' intent.
    </description>
    <value/>
  </param>

  <param subparam="true" name="spw" type="string">
    <shortdescription>Spectral window ids whose gains are to be checked</shortdescription>
    <description>The list of spectral windows and channels to which the
                 calibration will be applied. Defaults to all science windows
                 in the pipeline context.

                 Examples: spw='17', spw='11, 15'
    </description>
    <value/>
  </param>

  <param subparam="true" name="refant" type="string">
    <shortdescription>Reference antenna names</shortdescription>
    <description>A string containing a prioritized list of reference antenna
                 name(s) to be used to produce the gain table. Defaults to the
                 value(s) stored in the pipeline context. If undefined in the
                 pipeline context defaults to the CASA reference antenna naming
                 scheme.

                 Examples: refant='DV01', refant='DV06,DV07'
    </description>
    <value/>
  </param>

  <param name="flag_nmedian" type="bool">
    <shortdescription>True to flag values outside range [fnm_lo_limit * median, fnm_hi_limit*nmedian]</shortdescription>
    <description>True to flag figures of merit greater than
                 fnm_hi_limit * median or lower than fnm_lo_limit * median.
    </description>
    <value>True</value>
  </param>

  <param subparam="true" name="fnm_lo_limit" type="double">
    <description>Flag values lower than fnm_lo_limit * median</description>
    <value>0.5</value>
  </param>

  <param subparam="true" name="fnm_hi_limit" type="double">
    <description>Flag values higher than fnm_hi_limit * median</description>
    <value>1.5</value>
  </param>

  <param name="pipelinemode" type="string">
    <shortdescription>The pipeline operations mode</shortdescription>
    <description>The pipeline operating mode.
                 In 'automatic' mode the pipeline determines the values of all
                 context defined pipeline inputs automatically.
                 In 'interactive' mode the user can set the pipeline context
                 defined parameters manually.
                 In 'getinputs' mode the user can check the settings of all
                 pipeline parameters without running the task.
    </description>
    <value>automatic</value>
    <allowed kind="enum">
      <value>automatic</value>
      <value>interactive</value>
      <value>getinputs</value>
    </allowed>
  </param>

  <param subparam="true" name="dryrun" type="bool">
    <description>Run the task (False) or just display the command (True)</description>
    <value>False</value>
  </param>

  <param subparam="true" name="acceptresults" type="bool">
    <shortdescription>Add the results to the pipeline context</shortdescription>
    <description>Add the results of the task to the pipeline context (True) or
                 reject them (False).
    </description>
    <value>True</value>
  </param>

  <constraints>
    <when param="pipelinemode">
      <equals value="automatic" type="string"/>
      <equals value="interactive" type="string">
        <default param="vis"><value type="stringVec"/></default>
        <default param="intent"><value type="string"/></default>
        <default param="spw"><value type="string"/></default>
        <default param="refant"><value type="string"/></default>
        <default param="dryrun"><value type="bool">False</value></default>
        <default param="acceptresults"><value type="bool">True</value></default>
      </equals>
      <equals value="getinputs" type="string">
        <default param="vis"><value type="stringVec"/></default>
        <default param="intent"><value type="string"/></default>
        <default param="spw"><value type="string"/></default>
        <default param="refant"><value type="string"/></default>
      </equals>
    </when>

    <when param="flag_nmedian">
      <equals value="True" type="bool">
        <default param="fnm_lo_limit"><value type="float">0.5</value></default>
        <default param="fnm_hi_limit"><value type="float">1.5</value></default>
      </equals>
      <equals value="False" type="bool">
      </equals>
    </when>

  </constraints>
</input>


<returns>any</returns>

<example>
</example>
</task>
</casaxml>
