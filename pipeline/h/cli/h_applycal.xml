<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://casa.nrao.edu/schema/psetTypes.html">

<task category="pipeline" name="h_applycal" type="function">
<shortdescription>Apply the calibration(s) to the data</shortdescription>
<description>
Apply precomputed calibrations to the data.

h_applycal applies the precomputed calibration tables stored in the pipeline
context to the set of visibility files using predetermined field and
spectral window maps and default values for the interpolation schemes.

Users can interact with the pipeline calibration state using the tasks
hif_export_calstate and hif_import_calstate.

Issues

There is some discussion about the appropriate values of calwt. Given
properly scaled data, the correct value should be the CASA default of True.
However at the current time ALMA is suggesting that calwt be set to True for
applying observatory calibrations, e.g. antenna positions, WVR, and system
temperature corrections, and to False for applying instrument calibrations,
e.g. bandpass, gain, and flux.

Output:

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
    the results object for the pipeline task is returned
</description>
<input>
    <param subparam="true" name="vis" type="stringVec">
	<shortdescription>List of input MeasurementSets</shortdescription>
        <description>The list of input MeasurementSets. Defaults to the list of MeasurementSets
        in the pipeline context. Parameter is not available when pipelinemode='automatic'.
        example: ['X227.ms']</description>
	<value/>
   </param>

   <param subparam="true" name="field" type="string">
	<shortdescription>Set of data selection field names or ids</shortdescription>
        <description>A string containing the list of field names or field ids to which
        the calibration will be applied. Defaults to all fields in the pipeline
        context. Parameter is not available when pipelinemode='automatic'.
        example: '3C279', '3C279, M82'</description>
	<value/>
   </param>

   <param subparam="true" name="intent" type="string">
	<shortdescription>Set of data selection observing intents</shortdescription>
        <description>A string containing the list of intents against which the
        selected fields will be matched. Defaults to all supported intents
        in the pipeline context. Parameter is not available when pipelinemode='automatic'.
        example: '*TARGET*'</description>
	<value/>
   </param>

   <param subparam="true" name="spw" type="string">
	<shortdescription>Set of data selection spectral window/channels</shortdescription>
        <description>The list of spectral windows and channels to which the calibration
        will be applied. Defaults to all science windows in the pipeline
        context. Parameter is not available when pipelinemode='automatic'.
        example: '17', '11, 15'</description>
	<value/>
   </param>

   <param subparam="true" name="antenna" type="string">
	<shortdescription>Set of data selection antenna ids</shortdescription>
        <description>The list of antennas to which the calibration will be applied.
        Defaults to all antennas. Not currently supported.
        Parameter is not available when pipelinemode='automatic'.</description>
	<value/>
   </param>

    <param name="applymode" type="string">
        <shortdescription>Calibration mode: &quot;&quot;=&quot;calflagstrict&quot;,&quot;calflag&quot;,&quot;calflagstrict&quot;,&quot;trial&quot;,&quot;flagonly&quot;,&quot;flagonlystrict&quot;, or &quot;calonly&quot;</shortdescription>
        <description>Calibration apply mode
        ''='calflagstrict': calibrate data and apply flags from solutions using
            the strict flagging convention
        'trial': report on flags from solutions, dataset entirely unchanged
        'flagonly': apply flags from solutions only, data not calibrated
        'calonly': calibrate data only, flags from solutions NOT applied
        'calflagstrict':
        'flagonlystrict': same as above except flag spws for which calibration is
            unavailable in one or more tables (instead of allowing them to pass
            uncalibrated and unflagged)</description>
        <value/>
        <allowed kind="enum">
            <value/>
            <value>calflag</value>
            <value>calflagstrict</value>
            <value>trial</value>
            <value>flagonly</value>
            <value>flagonlystrict</value>
            <value>calonly</value>
        </allowed>
    </param>

    <param subparam="true" name="flagbackup" type="bool">
	<description>Backup the flags before the apply</description>
	<value type="bool">True</value>
    </param>

    <param name="flagsum" type="bool">
	<description>Compute before and after flagging summary statistics</description>
	<value type="bool">True</value>
    </param>

    <param subparam="true" name="flagdetailedsum" type="bool">
	<shortdescription>Compute before and after flagging summary statistics</shortdescription>
        <description>Compute detailed before and after flagging statistics summaries.
        Parameter available only when if flagsum is True.</description>
	<value type="bool">False</value>
    </param>

    <param name="pipelinemode" type="string">
	<shortdescription>The pipeline operating mode</shortdescription>
        <description>The pipeline operating mode. In 'automatic' mode the pipeline
        determines the values of all context defined pipeline inputs automatically.
        In interactive mode the user can set the pipeline context defined parameters
        manually.  In 'getinputs' mode the user can check the settings of all
        pipeline parameters without running the task.</description>
	<value>automatic</value>
	<allowed kind="enum">
	    <value>automatic</value>
	    <value>interactive</value>
	    <value>getinputs</value>
	</allowed>
    </param>

    <param subparam="true" name="dryrun" type="bool">
	<shortdescription>Run task (False) or display the command(True)</shortdescription>
        <description>Run task (False) or display the command(True).
        Parameter is available only when pipelinemode='interactive'.</description>
	<value type="bool">False</value>
    </param>

    <param subparam="true" name="acceptresults" type="bool">
	<shortdescription>Automatically accept results into the context</shortdescription>
        <description>Add the results of the task to the pipeline context (True) or
        reject them (False). Parameter is available only when pipelinemode='interactive'.</description>
	<value type="bool">True</value>
    </param>

    <constraints>
        <when param="pipelinemode">
	    <equals value="automatic" type="string"/>
	    <equals value="interactive" type="string">
	        <default param="vis"><value type="stringVec"/></default>
	        <default param="field"><value type="string"/></default>
	        <default param="intent"><value type="string"/></default>
	        <default param="spw"><value type="string"/></default>
		<default param="antenna"><value type="string"/></default>
	        <default param="flagbackup"><value type="bool">True</value></default>
	        <default param="dryrun"><value type="bool">False</value></default>
	        <default param="acceptresults"><value type="bool">True</value></default>
	    </equals>
	    <equals value="getinputs" type="string">
	        <default param="vis"><value type="stringVec"/></default>
	        <default param="field"><value type="string"/></default>
	        <default param="intent"><value type="string"/></default>
	        <default param="spw"><value type="string"/></default>
		<default param="antenna"><value type="string"/></default>
	        <default param="flagbackup"><value type="bool">True</value></default>
	    </equals>
        </when>
        <when param="flagsum">
	    <equals value="True" type="bool">
	        <default param="flagdetailedsum"><value type="bool">False</value></default>
	    </equals>
	    <equals value="False" type="bool">
	    </equals>
        </when>
    </constraints>
</input>


<returns>any</returns>

<example>

1. Apply the calibration to the target data

hif_applycal (intent='TARGET')

</example> 

</task>
</casaxml>
