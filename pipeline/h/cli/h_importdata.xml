<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd">

    <task category="pipeline" name="h_importdata" type="function">
        <shortdescription>Imports data into the interferometry pipeline</shortdescription>
        <description>
            The h_importdata task loads the specified visibility data into the pipeline
            context unpacking and / or converting it as necessary.

            If the 'overwrite' input parameter is set to False and the task is
            asked to convert an input ASDM input to an MS, then when the output
            MS already exists in the output directory, the importasdm
            conversion step is skipped, and instead the existing MS will be
            imported instead.

            results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
            the results object for the pipeline task is returned.
        </description>
        <input>
            <param name="vis" type="stringVec">
                <shortdescription>List of input visibility data</shortdescription>
                <description>
                    List of visibility data files. These may be ASDMs, tar files of ASDMs,
                    MSs, or tar files of MSs, If ASDM files are specified, they will be
                    converted to MS format.
                    example: vis=['X227.ms', 'asdms.tar.gz']
                </description>
                <value/>
            </param>

            <param name="session" type="stringVec">
                <shortdescription>List of visibility data sessions</shortdescription>
                <description>List of sessions to which the visibility files belong. Defaults to a 
                    single session containing all the visibility files, otherwise
                    a session must be assigned to each vis file.
                    example: session=['session_1', 'session_2']
                </description>
                <value/>
            </param>

            <param name="pipelinemode" type="string">
                <shortdescription>The pipeline operating mode</shortdescription>
                <description>The pipeline operating mode. In 'automatic' mode the pipeline
                    determines the values of all context defined pipeline inputs
                    automatically. In 'interactive' mode the user can set the pipeline
                    context defined parameters manually. In 'getinputs' mode the user
                    can check the settings of all pipeline parameters without running
                    the task.
                </description>

                <value>automatic</value>
                <allowed kind="enum">
                    <value>automatic</value>
                    <value>interactive</value>
                    <value>getinputs</value>
                </allowed>
            </param>

            <param name="asis" subparam="true" type="string">
                <shortdescription>Extra ASDM tables to convert as is</shortdescription>
                <description>ASDM tables to convert as is
                    default: 'Antenna Station Receiver CalAtmosphere'
                    Can only be set in pipelinemode='interactive'
                    example: 'Receiver', ''
                </description>
                <value/>
            </param>

            <param name="process_caldevice" subparam="true" type="bool">
                <shortdescription>Import the caldevice table from the ASDM</shortdescription>
                <description>Ingest the ASDM caldevice table.
                    Can only be set in pipelinemode='interactive'
                </description>
                <value>False</value>
            </param>

            <param name="overwrite" subparam="true" type="bool">
                <shortdescription>Overwrite existing files on import</shortdescription>
                <description>Overwrite existing files on import.
                    Can only be set in pipelinemode='interactive'.
                    When converting ASDM to MS, if overwrite=False and the MS
                    already exists in output directory, then this existing MS
                    dataset will be used instead.
                </description>
                <value>False</value>
            </param>

            <param name="nocopy" subparam="true" type="bool">
                <shortdescription>Disable copying of MS to working directory</shortdescription>
                <description>When importing an MS, disable copying of the MS to the working
                    directory.  Can only be set in pipelinemode='interactive'.
                </description>
                <value>False</value>
            </param>

            <param name="bdfflags" subparam="true" type="bool">
                <shortdescription>Apply BDF flags on import</shortdescription>
                <description>Apply BDF flags on import. Can only be set in 
                    pipelinemode='interactive'.
                </description>
                <value>True</value>
            </param>

            <param name="lazy" type="bool">
                <shortdescription>Use the lazy import option</shortdescription>
                <description>Use the lazy import option. Can only be set in
                    pipelinemode='interactive'.
                </description>
                <value>False</value>
            </param>

            <param name="ocorr_mode" subparam="true" type="string">
                <shortdescription>Correlation data mode</shortdescription>
                <description>Read in cross- and auto-correlation data(ca), cross-
                    correlation data only (co), or autocorrelation data only (ao).
                </description>
                <value>ca</value>
            </param>

            <param name="createmms" type="string">
                <shortdescription>Create an MMS</shortdescription>
                <description>Create a multi-MeasurementSet ('true') ready for parallel
                    processing, or a standard MeasurementSet ('false'). The default setting
                    ('automatic') creates an MMS if running in a cluster environment.
                    Can only be set in pipelinemode='interactive'
                </description>
                <value>automatic</value>
                <allowed kind="enum">
                    <value>automatic</value>
                    <value>true</value>
                    <value>false</value>
                </allowed>
            </param>

            <param name="dryrun" subparam="true" type="bool">
                <shortdescription>Run the task (False) or display task command (True)</shortdescription>
                <description>Run the task (False) or display task command (True)</description>
                <value>False</value>
            </param>

            <param name="acceptresults" subparam="true" type="bool">
                <shortdescription>Add the results into the pipeline context</shortdescription>
                <description>Add the results into the pipeline context</description>
                <value>True</value>
            </param>

            <constraints>
                <when param="pipelinemode">
                    <equals type="string" value="automatic">
                    </equals>
                    <equals type="string" value="interactive">
                        <default param="asis">
                            <value type="string"/>
                        </default>
                        <default param="ocorr_mode">
                            <value type="string">ca</value>
                        </default>
                        <default param="process_caldevice">
                            <value type="bool">False</value>
                        </default>
                        <default param="overwrite">
                            <value type="bool">False</value>
                        </default>
                        <default param="nocopy">
                            <value type="bool">False</value>
                        </default>
                        <default param="bdfflags">
                            <value type="bool">True</value>
                        </default>
                        <default param="dryrun">
                            <value type="bool">False</value>
                        </default>
                        <default param="acceptresults">
                            <value type="bool">True</value>
                        </default>
                    </equals>
                    <equals type="string" value="getinputs">
                        <default param="asis">
                            <value type="string"/>
                        </default>
                        <default param="ocorr_mode">
                            <value type="string">ca</value>
                        </default>
                        <default param="process_caldevice">
                            <value type="bool">False</value>
                        </default>
                        <default param="overwrite">
                            <value type="bool">False</value>
                        </default>
                        <default param="nocopy">
                            <value type="bool">False</value>
                        </default>
                        <default param="bdfflags">
                            <value type="bool">True</value>
                        </default>
                    </equals>
                </when>
            </constraints>

        </input>

        
        <returns>any</returns>


        <example>
Examples

1. Load an ASDM list in the ../rawdata subdirectory into the context&quot;

   h_importdata(vis=['../rawdata/uid___A002_X30a93d_X43e',
                     '../rawdata/uid_A002_x30a93d_X44e'])

2. Load an MS in the current directory into the context:

   h_importdata(vis=[uid___A002_X30a93d_X43e.ms])

3. Load a tarred ASDM in ../rawdata into the context:

   h_importdata(vis=['../rawdata/uid___A002_X30a93d_X43e.tar.gz'])

4. Check the h_importdata inputs, then import the data:

   myvislist = ['uid___A002_X30a93d_X43e.ms', 'uid_A002_x30a93d_X44e.ms']
   h_importdata(vis=myvislist, pipelinemode='getinputs')
   h_importdata(vis=myvislist)

5. Load an ASDM but check the results before accepting them into the context.
   results = h_importdata(vis=['uid___A002_X30a93d_X43e.ms'],
                          acceptresults=False)
   results.accept()

6. Run in dryrun mode before running for real
    results = h_importdata(vis=['uid___A002_X30a93d_X43e.ms'], dryrun=True)
    results = h_importdata(vis=['uid___A002_X30a93d_X43e.ms'])
        </example>
    </task>
</casaxml>
